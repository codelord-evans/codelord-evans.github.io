{"version":3,"file":"constant-2fe7eae5.js","sources":["../../../node_modules/.pnpm/d3-path@3.0.1/node_modules/d3-path/src/path.js","../../../node_modules/.pnpm/d3-shape@3.1.0/node_modules/d3-shape/src/constant.js"],"sourcesContent":["const pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r, ccw = !!ccw;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? Weâ€™re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n","export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n"],"names":["pi","tau","epsilon","tauEpsilon","Path","path","x","y","x1","y1","x2","y2","r","x0","y0","x21","y21","x01","y01","l01_2","x20","y20","l21_2","l20_2","l21","l01","l","t01","t21","a0","a1","ccw","dx","dy","cw","da","w","constant"],"mappings":"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"}