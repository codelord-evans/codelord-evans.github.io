{"version":3,"file":"sequenceDiagram-2cb581e5.js","sources":["../src/diagrams/sequence/parser/sequenceDiagram.jison","../src/diagrams/sequence/sequenceDb.js","../src/diagrams/sequence/styles.js","../src/diagrams/sequence/svgDraw.js","../src/diagrams/sequence/sequenceRenderer.ts","../src/diagrams/sequence/sequenceDiagram.ts"],"sourcesContent":["/** mermaid\n *  https://mermaidjs.github.io/\n *  (c) 2014-2015 Knut Sveidqvist\n *  MIT license.\n *\n *  Based on js sequence diagrams jison grammr\n *  https://bramp.github.io/js-sequence-diagrams/\n *  (c) 2012-2013 Andrew Brampton (bramp.net)\n *  Simplified BSD license.\n */\n%lex\n\n%options case-insensitive\n\n// Special states for recognizing aliases\n// A special state for grabbing text up to the first comment/newline\n%x ID ALIAS LINE\n\n// Directive states\n%x open_directive type_directive arg_directive\n%x acc_title\n%x acc_descr\n%x acc_descr_multiline\n%%\n\n\\%\\%\\{                                                          { this.begin('open_directive'); return 'open_directive'; }\n<open_directive>((?:(?!\\}\\%\\%)[^:.])*)                          { this.begin('type_directive'); return 'type_directive'; }\n<type_directive>\":\"                                             { this.popState(); this.begin('arg_directive'); return ':'; }\n<type_directive,arg_directive>\\}\\%\\%                            { this.popState(); this.popState(); return 'close_directive'; }\n<arg_directive>((?:(?!\\}\\%\\%).|\\n)*)                            return 'arg_directive';\n[\\n]+                                                           return 'NEWLINE';\n\\s+                                                             /* skip all whitespace */\n<ID,ALIAS,LINE>((?!\\n)\\s)+                                      /* skip same-line whitespace */\n<INITIAL,ID,ALIAS,LINE,arg_directive,type_directive,open_directive>\\#[^\\n]*   /* skip comments */\n\\%%(?!\\{)[^\\n]*                                                 /* skip comments */\n[^\\}]\\%\\%[^\\n]*                                                 /* skip comments */\n[0-9]+(?=[ \\n]+)       \t\t\t\t\t\t\t\t\t\t\treturn 'NUM';\n\"box\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{ this.begin('LINE'); return 'box'; }\n\"participant\"                                                   { this.begin('ID'); return 'participant'; }\n\"actor\"                                                   \t\t{ this.begin('ID'); return 'participant_actor'; }\n<ID>[^\\->:\\n,;]+?([\\-]*[^\\->:\\n,;]+?)*?(?=((?!\\n)\\s)+\"as\"(?!\\n)\\s|[#\\n;]|$)     { yytext = yytext.trim(); this.begin('ALIAS'); return 'ACTOR'; }\n<ALIAS>\"as\"                                                     { this.popState(); this.popState(); this.begin('LINE'); return 'AS'; }\n<ALIAS>(?:)                                                     { this.popState(); this.popState(); return 'NEWLINE'; }\n\"loop\"                                                          { this.begin('LINE'); return 'loop'; }\n\"rect\"                                                          { this.begin('LINE'); return 'rect'; }\n\"opt\"                                                           { this.begin('LINE'); return 'opt'; }\n\"alt\"                                                           { this.begin('LINE'); return 'alt'; }\n\"else\"                                                          { this.begin('LINE'); return 'else'; }\n\"par\"                                                           { this.begin('LINE'); return 'par'; }\n\"and\"                                                           { this.begin('LINE'); return 'and'; }\n\"critical\"                                                      { this.begin('LINE'); return 'critical'; }\n\"option\"                                                        { this.begin('LINE'); return 'option'; }\n\"break\"                                                         { this.begin('LINE'); return 'break'; }\n<LINE>(?:[:]?(?:no)?wrap:)?[^#\\n;]*                             { this.popState(); return 'restOfLine'; }\n\"end\"                                                           return 'end';\n\"left of\"                                                       return 'left_of';\n\"right of\"                                                      return 'right_of';\n\"links\"                                                         return 'links';\n\"link\"                                                          return 'link';\n\"properties\"                                                    return 'properties';\n\"details\"                                                       return 'details';\n\"over\"                                                          return 'over';\n\"note\"                                                          return 'note';\n\"activate\"                                                      { this.begin('ID'); return 'activate'; }\n\"deactivate\"                                                    { this.begin('ID'); return 'deactivate'; }\n\"title\"\\s[^#\\n;]+                                               return 'title';\n\"title:\"\\s[^#\\n;]+                                              return 'legacy_title';\naccTitle\\s*\":\"\\s*                                               { this.begin(\"acc_title\");return 'acc_title'; }\n<acc_title>(?!\\n|;|#)*[^\\n]*                                    { this.popState(); return \"acc_title_value\"; }\naccDescr\\s*\":\"\\s*                                               { this.begin(\"acc_descr\");return 'acc_descr'; }\n<acc_descr>(?!\\n|;|#)*[^\\n]*                                    { this.popState(); return \"acc_descr_value\"; }\naccDescr\\s*\"{\"\\s*                                { this.begin(\"acc_descr_multiline\");}\n<acc_descr_multiline>[\\}]                       { this.popState(); }\n<acc_descr_multiline>[^\\}]*                     return \"acc_descr_multiline_value\";\n\"sequenceDiagram\"                                               return 'SD';\n\"autonumber\"                                                    return 'autonumber';\n\"off\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn 'off';\n\",\"                                                             return ',';\n\";\"                                                             return 'NEWLINE';\n[^\\+\\->:\\n,;]+((?!(\\-x|\\-\\-x|\\-\\)|\\-\\-\\)))[\\-]*[^\\+\\->:\\n,;]+)*             { yytext = yytext.trim(); return 'ACTOR'; }\n\"->>\"                                                           return 'SOLID_ARROW';\n\"-->>\"                                                          return 'DOTTED_ARROW';\n\"->\"                                                            return 'SOLID_OPEN_ARROW';\n\"-->\"                                                           return 'DOTTED_OPEN_ARROW';\n\\-[x]                                                           return 'SOLID_CROSS';\n\\-\\-[x]                                                         return 'DOTTED_CROSS';\n\\-[\\)]                                                          return 'SOLID_POINT';\n\\-\\-[\\)]                                                        return 'DOTTED_POINT';\n\":\"(?:(?:no)?wrap:)?[^#\\n;]+                                    return 'TXT';\n\"+\"                                                             return '+';\n\"-\"                                                             return '-';\n<<EOF>>                                                         return 'NEWLINE';\n.                                                               return 'INVALID';\n\n/lex\n\n%left '^'\n\n%start start\n\n%% /* language grammar */\n\nstart\n\t: SPACE start\n\t| NEWLINE start\n\t| directive start\n\t| SD document { yy.apply($2);return $2; }\n\t;\n\ndocument\n\t: /* empty */ { $$ = [] }\n\t| document line {$1.push($2);$$ = $1}\n\t;\n\nline\n\t: SPACE statement { $$ = $2 }\n\t| statement { $$ = $1 }\n\t| NEWLINE { $$=[]; }\n\t;\n\nbox_section\n\t: /* empty */ { $$ = [] }\n\t| box_section box_line {$1.push($2);$$ = $1}\n\t;\n\nbox_line\n\t: SPACE participant_statement { $$ = $2 }\n\t| participant_statement { $$ = $1 }\n\t| NEWLINE { $$=[]; }\n\t;\n\n\ndirective\n  : openDirective typeDirective closeDirective 'NEWLINE'\n  | openDirective typeDirective ':' argDirective closeDirective 'NEWLINE'\n  ;\n\nstatement\n\t: participant_statement\n\t| 'box' restOfLine box_section end\n\t{\n\t\t$3.unshift({type: 'boxStart', boxData:yy.parseBoxData($2) });\n\t\t$3.push({type: 'boxEnd', boxText:$2});\n\t\t$$=$3;}\n\t| signal 'NEWLINE'\n\t| autonumber NUM NUM 'NEWLINE' { $$= {type:'sequenceIndex',sequenceIndex: Number($2), sequenceIndexStep:Number($3), sequenceVisible:true, signalType:yy.LINETYPE.AUTONUMBER};}\n\t| autonumber NUM 'NEWLINE' { $$ = {type:'sequenceIndex',sequenceIndex: Number($2), sequenceIndexStep:1, sequenceVisible:true, signalType:yy.LINETYPE.AUTONUMBER};}\n\t| autonumber off 'NEWLINE' { $$ = {type:'sequenceIndex', sequenceVisible:false, signalType:yy.LINETYPE.AUTONUMBER};}\n\t| autonumber 'NEWLINE'  {$$ = {type:'sequenceIndex', sequenceVisible:true, signalType:yy.LINETYPE.AUTONUMBER}; }\n\t| 'activate' actor 'NEWLINE' {$$={type: 'activeStart', signalType: yy.LINETYPE.ACTIVE_START, actor: $2};}\n\t| 'deactivate' actor 'NEWLINE' {$$={type: 'activeEnd', signalType: yy.LINETYPE.ACTIVE_END, actor: $2};}\n\t| note_statement 'NEWLINE'\n\t| links_statement 'NEWLINE'\n\t| link_statement 'NEWLINE'\n\t| properties_statement 'NEWLINE'\n\t| details_statement 'NEWLINE'\n\t| title {yy.setDiagramTitle($1.substring(6));$$=$1.substring(6);}\n\t| legacy_title {yy.setDiagramTitle($1.substring(7));$$=$1.substring(7);}\n  | acc_title acc_title_value  { $$=$2.trim();yy.setAccTitle($$); }\n  | acc_descr acc_descr_value  { $$=$2.trim();yy.setAccDescription($$); }\n  | acc_descr_multiline_value { $$=$1.trim();yy.setAccDescription($$); }\n\t| 'loop' restOfLine document end\n\t{\n\t\t$3.unshift({type: 'loopStart', loopText:yy.parseMessage($2), signalType: yy.LINETYPE.LOOP_START});\n\t\t$3.push({type: 'loopEnd', loopText:$2, signalType: yy.LINETYPE.LOOP_END});\n\t\t$$=$3;}\n\t| 'rect' restOfLine document end\n\t{\n\t\t$3.unshift({type: 'rectStart', color:yy.parseMessage($2), signalType: yy.LINETYPE.RECT_START });\n\t\t$3.push({type: 'rectEnd', color:yy.parseMessage($2), signalType: yy.LINETYPE.RECT_END });\n\t\t$$=$3;}\n\t| opt restOfLine document end\n\t{\n\t\t$3.unshift({type: 'optStart', optText:yy.parseMessage($2), signalType: yy.LINETYPE.OPT_START});\n\t\t$3.push({type: 'optEnd', optText:yy.parseMessage($2), signalType: yy.LINETYPE.OPT_END});\n\t\t$$=$3;}\n\t| alt restOfLine else_sections end\n\t{\n\t\t// Alt start\n\t\t$3.unshift({type: 'altStart', altText:yy.parseMessage($2), signalType: yy.LINETYPE.ALT_START});\n\t\t// Content in alt is already in $3\n\t\t// End\n\t\t$3.push({type: 'altEnd', signalType: yy.LINETYPE.ALT_END});\n\t\t$$=$3;}\n\t| par restOfLine par_sections end\n\t{\n\t\t// Parallel start\n\t\t$3.unshift({type: 'parStart', parText:yy.parseMessage($2), signalType: yy.LINETYPE.PAR_START});\n\t\t// Content in par is already in $3\n\t\t// End\n\t\t$3.push({type: 'parEnd', signalType: yy.LINETYPE.PAR_END});\n\t\t$$=$3;}\n\t| critical restOfLine option_sections end\n\t{\n\t\t// critical start\n\t\t$3.unshift({type: 'criticalStart', criticalText:yy.parseMessage($2), signalType: yy.LINETYPE.CRITICAL_START});\n\t\t// Content in critical is already in $3\n\t\t// critical end\n\t\t$3.push({type: 'criticalEnd', signalType: yy.LINETYPE.CRITICAL_END});\n\t\t$$=$3;}\n\t| break restOfLine document end\n\t{\n\t\t$3.unshift({type: 'breakStart', breakText:yy.parseMessage($2), signalType: yy.LINETYPE.BREAK_START});\n\t\t$3.push({type: 'breakEnd', optText:yy.parseMessage($2), signalType: yy.LINETYPE.BREAK_END});\n\t\t$$=$3;}\n  | directive\n\t;\n\noption_sections\n\t: document\n\t| document option restOfLine option_sections\n\t{ $$ = $1.concat([{type: 'option', optionText:yy.parseMessage($3), signalType: yy.LINETYPE.CRITICAL_OPTION}, $4]); }\n\t;\n\npar_sections\n\t: document\n\t| document and restOfLine par_sections\n\t{ $$ = $1.concat([{type: 'and', parText:yy.parseMessage($3), signalType: yy.LINETYPE.PAR_AND}, $4]); }\n\t;\n\nelse_sections\n\t: document\n\t| document else restOfLine else_sections\n\t{ $$ = $1.concat([{type: 'else', altText:yy.parseMessage($3), signalType: yy.LINETYPE.ALT_ELSE}, $4]); }\n\t;\n\nparticipant_statement\n\t: 'participant' actor 'AS' restOfLine 'NEWLINE' {$2.type='addParticipant';$2.description=yy.parseMessage($4); $$=$2;}\n\t| 'participant' actor 'NEWLINE' {$2.type='addParticipant';$$=$2;}\n\t| 'participant_actor' actor 'AS' restOfLine 'NEWLINE' {$2.type='addActor';$2.description=yy.parseMessage($4); $$=$2;}\n\t| 'participant_actor' actor 'NEWLINE' {$2.type='addActor'; $$=$2;}\n\t;\n\nnote_statement\n\t: 'note' placement actor text2\n\t{\n\t\t$$ = [$3, {type:'addNote', placement:$2, actor:$3.actor, text:$4}];}\n\t| 'note' 'over' actor_pair text2\n\t{\n\t\t// Coerce actor_pair into a [to, from, ...] array\n\t\t$2 = [].concat($3, $3).slice(0, 2);\n\t\t$2[0] = $2[0].actor;\n\t\t$2[1] = $2[1].actor;\n\t\t$$ = [$3, {type:'addNote', placement:yy.PLACEMENT.OVER, actor:$2.slice(0, 2), text:$4}];}\n\t;\n\nlinks_statement\n\t: 'links' actor text2\n\t{\n\t\t$$ = [$2, {type:'addLinks', actor:$2.actor, text:$3}];\n  }\n\t;\n\nlink_statement\n\t: 'link' actor text2\n\t{\n\t\t$$ = [$2, {type:'addALink', actor:$2.actor, text:$3}];\n  }\n\t;\n\nproperties_statement\n\t: 'properties' actor text2\n\t{\n\t\t$$ = [$2, {type:'addProperties', actor:$2.actor, text:$3}];\n  }\n\t;\n\ndetails_statement\n\t: 'details' actor text2\n\t{\n\t\t$$ = [$2, {type:'addDetails', actor:$2.actor, text:$3}];\n  }\n\t;\n\nspaceList\n    : SPACE spaceList\n    | SPACE\n    ;\nactor_pair\n\t: actor ',' actor   { $$ = [$1, $3]; }\n\t| actor             { $$ = $1; }\n\t;\n\nplacement\n\t: 'left_of'   { $$ = yy.PLACEMENT.LEFTOF; }\n\t| 'right_of'  { $$ = yy.PLACEMENT.RIGHTOF; }\n\t;\n\nsignal\n\t: actor signaltype '+' actor text2\n\t{ $$ = [$1,$4,{type: 'addMessage', from:$1.actor, to:$4.actor, signalType:$2, msg:$5},\n\t              {type: 'activeStart', signalType: yy.LINETYPE.ACTIVE_START, actor: $4}\n\t             ]}\n\t| actor signaltype '-' actor text2\n\t{ $$ = [$1,$4,{type: 'addMessage', from:$1.actor, to:$4.actor, signalType:$2, msg:$5},\n\t             {type: 'activeEnd', signalType: yy.LINETYPE.ACTIVE_END, actor: $1}\n\t             ]}\n\t| actor signaltype actor text2\n\t{ $$ = [$1,$3,{type: 'addMessage', from:$1.actor, to:$3.actor, signalType:$2, msg:$4}]}\n\t;\n\n// actor\n// \t: actor_participant\n// \t| actor_actor\n// \t;\n\nactor: ACTOR {$$={ type: 'addParticipant', actor:$1}};\n// actor_actor: ACTOR {$$={type: 'addActor', actor:$1}};\n\nsignaltype\n\t: SOLID_OPEN_ARROW  { $$ = yy.LINETYPE.SOLID_OPEN; }\n\t| DOTTED_OPEN_ARROW { $$ = yy.LINETYPE.DOTTED_OPEN; }\n\t| SOLID_ARROW       { $$ = yy.LINETYPE.SOLID; }\n\t| DOTTED_ARROW      { $$ = yy.LINETYPE.DOTTED; }\n\t| SOLID_CROSS       { $$ = yy.LINETYPE.SOLID_CROSS; }\n\t| DOTTED_CROSS      { $$ = yy.LINETYPE.DOTTED_CROSS; }\n\t| SOLID_POINT { $$ = yy.LINETYPE.SOLID_POINT; }\n\t| DOTTED_POINT { $$ = yy.LINETYPE.DOTTED_POINT; }\n\t;\n\ntext2\n  : TXT {$$ = yy.parseMessage($1.trim().substring(1)) }\n  ;\n\nopenDirective\n  : open_directive { yy.parseDirective('%%{', 'open_directive'); }\n  ;\n\ntypeDirective\n  : type_directive { yy.parseDirective($1, 'type_directive'); }\n  ;\n\nargDirective\n  : arg_directive { $1 = $1.trim().replace(/'/g, '\"'); yy.parseDirective($1, 'arg_directive'); }\n  ;\n\ncloseDirective\n  : close_directive { yy.parseDirective('}%%', 'close_directive', 'sequence'); }\n  ;\n\n%%\n","import mermaidAPI from '../../mermaidAPI';\nimport * as configApi from '../../config';\nimport { log } from '../../logger';\nimport { sanitizeText } from '../common/common';\nimport {\n  setAccTitle,\n  getAccTitle,\n  setDiagramTitle,\n  getDiagramTitle,\n  getAccDescription,\n  setAccDescription,\n  clear as commonClear,\n} from '../../commonDb';\n\nlet prevActor = undefined;\nlet actors = {};\nlet boxes = [];\nlet messages = [];\nconst notes = [];\nlet sequenceNumbersEnabled = false;\nlet wrapEnabled;\nlet currentBox = undefined;\n\nexport const parseDirective = function (statement, context, type) {\n  mermaidAPI.parseDirective(this, statement, context, type);\n};\n\nexport const addBox = function (data) {\n  boxes.push({\n    name: data.text,\n    wrap: (data.wrap === undefined && autoWrap()) || !!data.wrap,\n    fill: data.color,\n    actorKeys: [],\n  });\n  currentBox = boxes.slice(-1)[0];\n};\n\nexport const addActor = function (id, name, description, type) {\n  let assignedBox = currentBox;\n  const old = actors[id];\n  if (old) {\n    // If already set and trying to set to a new one throw error\n    if (currentBox && old.box && currentBox !== old.box) {\n      throw new Error(\n        'A same participant should only be defined in one Box: ' +\n          old.name +\n          \" can't be in '\" +\n          old.box.name +\n          \"' and in '\" +\n          currentBox.name +\n          \"' at the same time.\"\n      );\n    }\n\n    // Don't change the box if already\n    assignedBox = old.box ? old.box : currentBox;\n    old.box = assignedBox;\n\n    // Don't allow description nulling\n    if (old && name === old.name && description == null) {\n      return;\n    }\n  }\n\n  // Don't allow null descriptions, either\n  if (description == null || description.text == null) {\n    description = { text: name, wrap: null, type };\n  }\n  if (type == null || description.text == null) {\n    description = { text: name, wrap: null, type };\n  }\n\n  actors[id] = {\n    box: assignedBox,\n    name: name,\n    description: description.text,\n    wrap: (description.wrap === undefined && autoWrap()) || !!description.wrap,\n    prevActor: prevActor,\n    links: {},\n    properties: {},\n    actorCnt: null,\n    rectData: null,\n    type: type || 'participant',\n  };\n  if (prevActor && actors[prevActor]) {\n    actors[prevActor].nextActor = id;\n  }\n\n  if (currentBox) {\n    currentBox.actorKeys.push(id);\n  }\n  prevActor = id;\n};\n\nconst activationCount = (part) => {\n  let i;\n  let count = 0;\n  for (i = 0; i < messages.length; i++) {\n    if (messages[i].type === LINETYPE.ACTIVE_START && messages[i].from.actor === part) {\n      count++;\n    }\n    if (messages[i].type === LINETYPE.ACTIVE_END && messages[i].from.actor === part) {\n      count--;\n    }\n  }\n  return count;\n};\n\nexport const addMessage = function (idFrom, idTo, message, answer) {\n  messages.push({\n    from: idFrom,\n    to: idTo,\n    message: message.text,\n    wrap: (message.wrap === undefined && autoWrap()) || !!message.wrap,\n    answer: answer,\n  });\n};\n\nexport const addSignal = function (\n  idFrom,\n  idTo,\n  message = { text: undefined, wrap: undefined },\n  messageType\n) {\n  if (messageType === LINETYPE.ACTIVE_END) {\n    const cnt = activationCount(idFrom.actor);\n    if (cnt < 1) {\n      // Bail out as there is an activation signal from an inactive participant\n      let error = new Error('Trying to inactivate an inactive participant (' + idFrom.actor + ')');\n      error.hash = {\n        text: '->>-',\n        token: '->>-',\n        line: '1',\n        loc: { first_line: 1, last_line: 1, first_column: 1, last_column: 1 },\n        expected: [\"'ACTIVE_PARTICIPANT'\"],\n      };\n      throw error;\n    }\n  }\n  messages.push({\n    from: idFrom,\n    to: idTo,\n    message: message.text,\n    wrap: (message.wrap === undefined && autoWrap()) || !!message.wrap,\n    type: messageType,\n  });\n  return true;\n};\n\nexport const hasAtLeastOneBox = function () {\n  return boxes.length > 0;\n};\n\nexport const hasAtLeastOneBoxWithTitle = function () {\n  return boxes.some((b) => b.name);\n};\n\nexport const getMessages = function () {\n  return messages;\n};\n\nexport const getBoxes = function () {\n  return boxes;\n};\nexport const getActors = function () {\n  return actors;\n};\nexport const getActor = function (id) {\n  return actors[id];\n};\nexport const getActorKeys = function () {\n  return Object.keys(actors);\n};\nexport const enableSequenceNumbers = function () {\n  sequenceNumbersEnabled = true;\n};\nexport const disableSequenceNumbers = function () {\n  sequenceNumbersEnabled = false;\n};\nexport const showSequenceNumbers = () => sequenceNumbersEnabled;\n\nexport const setWrap = function (wrapSetting) {\n  wrapEnabled = wrapSetting;\n};\n\nexport const autoWrap = () => {\n  // if setWrap has been called, use that value, otherwise use the value from the config\n  // TODO: refactor, always use the config value let setWrap update the config value\n  if (wrapEnabled !== undefined) {\n    return wrapEnabled;\n  }\n  return configApi.getConfig().sequence.wrap;\n};\n\nexport const clear = function () {\n  actors = {};\n  boxes = [];\n  messages = [];\n  sequenceNumbersEnabled = false;\n  commonClear();\n};\n\nexport const parseMessage = function (str) {\n  const _str = str.trim();\n  const message = {\n    text: _str.replace(/^:?(?:no)?wrap:/, '').trim(),\n    wrap:\n      _str.match(/^:?wrap:/) !== null\n        ? true\n        : _str.match(/^:?nowrap:/) !== null\n        ? false\n        : undefined,\n  };\n  log.debug('parseMessage:', message);\n  return message;\n};\n\n// We expect the box statement to be color first then description\n// The color can be rgb,rgba,hsl,hsla, or css code names  #hex codes are not supported for now because of the way the char # is handled\n// We extract first segment as color, the rest of the line is considered as text\nexport const parseBoxData = function (str) {\n  const match = str.match(/^((?:rgba?|hsla?)\\s*\\(.*\\)|\\w*)(.*)$/);\n  let color = match != null && match[1] ? match[1].trim() : 'transparent';\n  let title = match != null && match[2] ? match[2].trim() : undefined;\n\n  // check that the string is a color\n  if (window && window.CSS) {\n    if (!window.CSS.supports('color', color)) {\n      color = 'transparent';\n      title = str.trim();\n    }\n  } else {\n    const style = new Option().style;\n    style.color = color;\n    if (style.color !== color) {\n      color = 'transparent';\n      title = str.trim();\n    }\n  }\n\n  const boxData = {\n    color: color,\n    text:\n      title !== undefined\n        ? sanitizeText(title.replace(/^:?(?:no)?wrap:/, ''), configApi.getConfig())\n        : undefined,\n    wrap:\n      title !== undefined\n        ? title.match(/^:?wrap:/) !== null\n          ? true\n          : title.match(/^:?nowrap:/) !== null\n          ? false\n          : undefined\n        : undefined,\n  };\n  return boxData;\n};\n\nexport const LINETYPE = {\n  SOLID: 0,\n  DOTTED: 1,\n  NOTE: 2,\n  SOLID_CROSS: 3,\n  DOTTED_CROSS: 4,\n  SOLID_OPEN: 5,\n  DOTTED_OPEN: 6,\n  LOOP_START: 10,\n  LOOP_END: 11,\n  ALT_START: 12,\n  ALT_ELSE: 13,\n  ALT_END: 14,\n  OPT_START: 15,\n  OPT_END: 16,\n  ACTIVE_START: 17,\n  ACTIVE_END: 18,\n  PAR_START: 19,\n  PAR_AND: 20,\n  PAR_END: 21,\n  RECT_START: 22,\n  RECT_END: 23,\n  SOLID_POINT: 24,\n  DOTTED_POINT: 25,\n  AUTONUMBER: 26,\n  CRITICAL_START: 27,\n  CRITICAL_OPTION: 28,\n  CRITICAL_END: 29,\n  BREAK_START: 30,\n  BREAK_END: 31,\n};\n\nexport const ARROWTYPE = {\n  FILLED: 0,\n  OPEN: 1,\n};\n\nexport const PLACEMENT = {\n  LEFTOF: 0,\n  RIGHTOF: 1,\n  OVER: 2,\n};\n\nexport const addNote = function (actor, placement, message) {\n  const note = {\n    actor: actor,\n    placement: placement,\n    message: message.text,\n    wrap: (message.wrap === undefined && autoWrap()) || !!message.wrap,\n  };\n\n  // Coerce actor into a [to, from, ...] array\n  // eslint-disable-next-line unicorn/prefer-spread\n  const actors = [].concat(actor, actor);\n\n  notes.push(note);\n  messages.push({\n    from: actors[0],\n    to: actors[1],\n    message: message.text,\n    wrap: (message.wrap === undefined && autoWrap()) || !!message.wrap,\n    type: LINETYPE.NOTE,\n    placement: placement,\n  });\n};\n\nexport const addLinks = function (actorId, text) {\n  // find the actor\n  const actor = getActor(actorId);\n  // JSON.parse the text\n  try {\n    let sanitizedText = sanitizeText(text.text, configApi.getConfig());\n    sanitizedText = sanitizedText.replace(/&amp;/g, '&');\n    sanitizedText = sanitizedText.replace(/&equals;/g, '=');\n    const links = JSON.parse(sanitizedText);\n    // add the deserialized text to the actor's links field.\n    insertLinks(actor, links);\n  } catch (e) {\n    log.error('error while parsing actor link text', e);\n  }\n};\n\nexport const addALink = function (actorId, text) {\n  // find the actor\n  const actor = getActor(actorId);\n  try {\n    const links = {};\n    let sanitizedText = sanitizeText(text.text, configApi.getConfig());\n    var sep = sanitizedText.indexOf('@');\n    sanitizedText = sanitizedText.replace(/&amp;/g, '&');\n    sanitizedText = sanitizedText.replace(/&equals;/g, '=');\n    var label = sanitizedText.slice(0, sep - 1).trim();\n    var link = sanitizedText.slice(sep + 1).trim();\n\n    links[label] = link;\n    // add the deserialized text to the actor's links field.\n    insertLinks(actor, links);\n  } catch (e) {\n    log.error('error while parsing actor link text', e);\n  }\n};\n\n/**\n * @param {any} actor\n * @param {any} links\n */\nfunction insertLinks(actor, links) {\n  if (actor.links == null) {\n    actor.links = links;\n  } else {\n    for (let key in links) {\n      actor.links[key] = links[key];\n    }\n  }\n}\n\nexport const addProperties = function (actorId, text) {\n  // find the actor\n  const actor = getActor(actorId);\n  // JSON.parse the text\n  try {\n    let sanitizedText = sanitizeText(text.text, configApi.getConfig());\n    const properties = JSON.parse(sanitizedText);\n    // add the deserialized text to the actor's property field.\n    insertProperties(actor, properties);\n  } catch (e) {\n    log.error('error while parsing actor properties text', e);\n  }\n};\n\n/**\n * @param {any} actor\n * @param {any} properties\n */\nfunction insertProperties(actor, properties) {\n  if (actor.properties == null) {\n    actor.properties = properties;\n  } else {\n    for (let key in properties) {\n      actor.properties[key] = properties[key];\n    }\n  }\n}\n\n/**\n *\n */\nfunction boxEnd() {\n  currentBox = undefined;\n}\n\nexport const addDetails = function (actorId, text) {\n  // find the actor\n  const actor = getActor(actorId);\n  const elem = document.getElementById(text.text);\n\n  // JSON.parse the text\n  try {\n    const text = elem.innerHTML;\n    const details = JSON.parse(text);\n    // add the deserialized text to the actor's property field.\n    if (details['properties']) {\n      insertProperties(actor, details['properties']);\n    }\n\n    if (details['links']) {\n      insertLinks(actor, details['links']);\n    }\n  } catch (e) {\n    log.error('error while parsing actor details text', e);\n  }\n};\n\nexport const getActorProperty = function (actor, key) {\n  if (actor !== undefined && actor.properties !== undefined) {\n    return actor.properties[key];\n  }\n\n  return undefined;\n};\n\nexport const apply = function (param) {\n  if (Array.isArray(param)) {\n    param.forEach(function (item) {\n      apply(item);\n    });\n  } else {\n    switch (param.type) {\n      case 'sequenceIndex':\n        messages.push({\n          from: undefined,\n          to: undefined,\n          message: {\n            start: param.sequenceIndex,\n            step: param.sequenceIndexStep,\n            visible: param.sequenceVisible,\n          },\n          wrap: false,\n          type: param.signalType,\n        });\n        break;\n      case 'addParticipant':\n        addActor(param.actor, param.actor, param.description, 'participant');\n        break;\n      case 'addActor':\n        addActor(param.actor, param.actor, param.description, 'actor');\n        break;\n      case 'activeStart':\n        addSignal(param.actor, undefined, undefined, param.signalType);\n        break;\n      case 'activeEnd':\n        addSignal(param.actor, undefined, undefined, param.signalType);\n        break;\n      case 'addNote':\n        addNote(param.actor, param.placement, param.text);\n        break;\n      case 'addLinks':\n        addLinks(param.actor, param.text);\n        break;\n      case 'addALink':\n        addALink(param.actor, param.text);\n        break;\n      case 'addProperties':\n        addProperties(param.actor, param.text);\n        break;\n      case 'addDetails':\n        addDetails(param.actor, param.text);\n        break;\n      case 'addMessage':\n        addSignal(param.from, param.to, param.msg, param.signalType);\n        break;\n      case 'boxStart':\n        addBox(param.boxData);\n        break;\n      case 'boxEnd':\n        boxEnd();\n        break;\n      case 'loopStart':\n        addSignal(undefined, undefined, param.loopText, param.signalType);\n        break;\n      case 'loopEnd':\n        addSignal(undefined, undefined, undefined, param.signalType);\n        break;\n      case 'rectStart':\n        addSignal(undefined, undefined, param.color, param.signalType);\n        break;\n      case 'rectEnd':\n        addSignal(undefined, undefined, undefined, param.signalType);\n        break;\n      case 'optStart':\n        addSignal(undefined, undefined, param.optText, param.signalType);\n        break;\n      case 'optEnd':\n        addSignal(undefined, undefined, undefined, param.signalType);\n        break;\n      case 'altStart':\n        addSignal(undefined, undefined, param.altText, param.signalType);\n        break;\n      case 'else':\n        addSignal(undefined, undefined, param.altText, param.signalType);\n        break;\n      case 'altEnd':\n        addSignal(undefined, undefined, undefined, param.signalType);\n        break;\n      case 'setAccTitle':\n        setAccTitle(param.text);\n        break;\n      case 'parStart':\n        addSignal(undefined, undefined, param.parText, param.signalType);\n        break;\n      case 'and':\n        addSignal(undefined, undefined, param.parText, param.signalType);\n        break;\n      case 'parEnd':\n        addSignal(undefined, undefined, undefined, param.signalType);\n        break;\n      case 'criticalStart':\n        addSignal(undefined, undefined, param.criticalText, param.signalType);\n        break;\n      case 'option':\n        addSignal(undefined, undefined, param.optionText, param.signalType);\n        break;\n      case 'criticalEnd':\n        addSignal(undefined, undefined, undefined, param.signalType);\n        break;\n      case 'breakStart':\n        addSignal(undefined, undefined, param.breakText, param.signalType);\n        break;\n      case 'breakEnd':\n        addSignal(undefined, undefined, undefined, param.signalType);\n        break;\n    }\n  }\n};\n\nexport default {\n  addActor,\n  addMessage,\n  addSignal,\n  addLinks,\n  addDetails,\n  addProperties,\n  autoWrap,\n  setWrap,\n  enableSequenceNumbers,\n  disableSequenceNumbers,\n  showSequenceNumbers,\n  getMessages,\n  getActors,\n  getActor,\n  getActorKeys,\n  getActorProperty,\n  getAccTitle,\n  getBoxes,\n  getDiagramTitle,\n  setDiagramTitle,\n  parseDirective,\n  getConfig: () => configApi.getConfig().sequence,\n  clear,\n  parseMessage,\n  parseBoxData,\n  LINETYPE,\n  ARROWTYPE,\n  PLACEMENT,\n  addNote,\n  setAccTitle,\n  apply,\n  setAccDescription,\n  getAccDescription,\n  hasAtLeastOneBox,\n  hasAtLeastOneBoxWithTitle,\n};\n","const getStyles = (options) =>\n  `.actor {\n    stroke: ${options.actorBorder};\n    fill: ${options.actorBkg};\n  }\n\n  text.actor > tspan {\n    fill: ${options.actorTextColor};\n    stroke: none;\n  }\n\n  .actor-line {\n    stroke: ${options.actorLineColor};\n  }\n\n  .messageLine0 {\n    stroke-width: 1.5;\n    stroke-dasharray: none;\n    stroke: ${options.signalColor};\n  }\n\n  .messageLine1 {\n    stroke-width: 1.5;\n    stroke-dasharray: 2, 2;\n    stroke: ${options.signalColor};\n  }\n\n  #arrowhead path {\n    fill: ${options.signalColor};\n    stroke: ${options.signalColor};\n  }\n\n  .sequenceNumber {\n    fill: ${options.sequenceNumberColor};\n  }\n\n  #sequencenumber {\n    fill: ${options.signalColor};\n  }\n\n  #crosshead path {\n    fill: ${options.signalColor};\n    stroke: ${options.signalColor};\n  }\n\n  .messageText {\n    fill: ${options.signalTextColor};\n    stroke: none;\n  }\n\n  .labelBox {\n    stroke: ${options.labelBoxBorderColor};\n    fill: ${options.labelBoxBkgColor};\n  }\n\n  .labelText, .labelText > tspan {\n    fill: ${options.labelTextColor};\n    stroke: none;\n  }\n\n  .loopText, .loopText > tspan {\n    fill: ${options.loopTextColor};\n    stroke: none;\n  }\n\n  .loopLine {\n    stroke-width: 2px;\n    stroke-dasharray: 2, 2;\n    stroke: ${options.labelBoxBorderColor};\n    fill: ${options.labelBoxBorderColor};\n  }\n\n  .note {\n    //stroke: #decc93;\n    stroke: ${options.noteBorderColor};\n    fill: ${options.noteBkgColor};\n  }\n\n  .noteText, .noteText > tspan {\n    fill: ${options.noteTextColor};\n    stroke: none;\n  }\n\n  .activation0 {\n    fill: ${options.activationBkgColor};\n    stroke: ${options.activationBorderColor};\n  }\n\n  .activation1 {\n    fill: ${options.activationBkgColor};\n    stroke: ${options.activationBorderColor};\n  }\n\n  .activation2 {\n    fill: ${options.activationBkgColor};\n    stroke: ${options.activationBorderColor};\n  }\n\n  .actorPopupMenu {\n    position: absolute;\n  }\n\n  .actorPopupMenuPanel {\n    position: absolute;\n    fill: ${options.actorBkg};\n    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\n    filter: drop-shadow(3px 5px 2px rgb(0 0 0 / 0.4));\n}\n  .actor-man line {\n    stroke: ${options.actorBorder};\n    fill: ${options.actorBkg};\n  }\n  .actor-man circle, line {\n    stroke: ${options.actorBorder};\n    fill: ${options.actorBkg};\n    stroke-width: 2px;\n  }\n`;\n\nexport default getStyles;\n","import common from '../common/common';\nimport { addFunction } from '../../interactionDb';\nimport { parseFontSize } from '../../utils';\nimport { sanitizeUrl } from '@braintree/sanitize-url';\n\nexport const drawRect = function (elem, rectData) {\n  const rectElem = elem.append('rect');\n  rectElem.attr('x', rectData.x);\n  rectElem.attr('y', rectData.y);\n  rectElem.attr('fill', rectData.fill);\n  rectElem.attr('stroke', rectData.stroke);\n  rectElem.attr('width', rectData.width);\n  rectElem.attr('height', rectData.height);\n  rectElem.attr('rx', rectData.rx);\n  rectElem.attr('ry', rectData.ry);\n\n  if (rectData.class !== undefined) {\n    rectElem.attr('class', rectData.class);\n  }\n\n  return rectElem;\n};\n\n// const sanitizeUrl = function (s) {\n//   return s\n//     .replace(/&/g, '&amp;')\n//     .replace(/</g, '&lt;')\n//     .replace(/javascript:/g, '');\n// };\n\nconst addPopupInteraction = (id, actorCnt) => {\n  addFunction(() => {\n    const arr = document.querySelectorAll(id);\n    // This will be the case when running in sandboxed mode\n    if (arr.length === 0) {\n      return;\n    }\n    arr[0].addEventListener('mouseover', function () {\n      popupMenuUpFunc('actor' + actorCnt + '_popup');\n    });\n    arr[0].addEventListener('mouseout', function () {\n      popupMenuDownFunc('actor' + actorCnt + '_popup');\n    });\n  });\n};\nexport const drawPopup = function (elem, actor, minMenuWidth, textAttrs, forceMenus) {\n  if (actor.links === undefined || actor.links === null || Object.keys(actor.links).length === 0) {\n    return { height: 0, width: 0 };\n  }\n\n  const links = actor.links;\n  const actorCnt = actor.actorCnt;\n  const rectData = actor.rectData;\n\n  var displayValue = 'none';\n  if (forceMenus) {\n    displayValue = 'block !important';\n  }\n\n  const g = elem.append('g');\n  g.attr('id', 'actor' + actorCnt + '_popup');\n  g.attr('class', 'actorPopupMenu');\n  g.attr('display', displayValue);\n  addPopupInteraction('#actor' + actorCnt + '_popup', actorCnt);\n  var actorClass = '';\n  if (rectData.class !== undefined) {\n    actorClass = ' ' + rectData.class;\n  }\n\n  let menuWidth = rectData.width > minMenuWidth ? rectData.width : minMenuWidth;\n\n  const rectElem = g.append('rect');\n  rectElem.attr('class', 'actorPopupMenuPanel' + actorClass);\n  rectElem.attr('x', rectData.x);\n  rectElem.attr('y', rectData.height);\n  rectElem.attr('fill', rectData.fill);\n  rectElem.attr('stroke', rectData.stroke);\n  rectElem.attr('width', menuWidth);\n  rectElem.attr('height', rectData.height);\n  rectElem.attr('rx', rectData.rx);\n  rectElem.attr('ry', rectData.ry);\n  if (links != null) {\n    var linkY = 20;\n    for (let key in links) {\n      var linkElem = g.append('a');\n      var sanitizedLink = sanitizeUrl(links[key]);\n      linkElem.attr('xlink:href', sanitizedLink);\n      linkElem.attr('target', '_blank');\n\n      _drawMenuItemTextCandidateFunc(textAttrs)(\n        key,\n        linkElem,\n        rectData.x + 10,\n        rectData.height + linkY,\n        menuWidth,\n        20,\n        { class: 'actor' },\n        textAttrs\n      );\n\n      linkY += 30;\n    }\n  }\n\n  rectElem.attr('height', linkY);\n\n  return { height: rectData.height + linkY, width: menuWidth };\n};\n\nexport const drawImage = function (elem, x, y, link) {\n  const imageElem = elem.append('image');\n  imageElem.attr('x', x);\n  imageElem.attr('y', y);\n  var sanitizedLink = sanitizeUrl(link);\n  imageElem.attr('xlink:href', sanitizedLink);\n};\n\nexport const drawEmbeddedImage = function (elem, x, y, link) {\n  const imageElem = elem.append('use');\n  imageElem.attr('x', x);\n  imageElem.attr('y', y);\n  var sanitizedLink = sanitizeUrl(link);\n  imageElem.attr('xlink:href', '#' + sanitizedLink);\n};\n\nexport const popupMenu = function (popid) {\n  return (\n    \"var pu = document.getElementById('\" +\n    popid +\n    \"'); if (pu != null) { pu.style.display = 'block'; }\"\n  );\n};\n\nexport const popdownMenu = function (popid) {\n  return (\n    \"var pu = document.getElementById('\" +\n    popid +\n    \"'); if (pu != null) { pu.style.display = 'none'; }\"\n  );\n};\n\nconst popupMenuUpFunc = function (popupId) {\n  var pu = document.getElementById(popupId);\n  if (pu != null) {\n    pu.style.display = 'block';\n  }\n};\n\nconst popupMenuDownFunc = function (popupId) {\n  var pu = document.getElementById(popupId);\n  if (pu != null) {\n    pu.style.display = 'none';\n  }\n};\nexport const drawText = function (elem, textData) {\n  let prevTextHeight = 0,\n    textHeight = 0;\n  const lines = textData.text.split(common.lineBreakRegex);\n\n  const [_textFontSize, _textFontSizePx] = parseFontSize(textData.fontSize);\n\n  let textElems = [];\n  let dy = 0;\n  let yfunc = () => textData.y;\n  if (\n    textData.valign !== undefined &&\n    textData.textMargin !== undefined &&\n    textData.textMargin > 0\n  ) {\n    switch (textData.valign) {\n      case 'top':\n      case 'start':\n        yfunc = () => Math.round(textData.y + textData.textMargin);\n        break;\n      case 'middle':\n      case 'center':\n        yfunc = () =>\n          Math.round(textData.y + (prevTextHeight + textHeight + textData.textMargin) / 2);\n        break;\n      case 'bottom':\n      case 'end':\n        yfunc = () =>\n          Math.round(\n            textData.y +\n              (prevTextHeight + textHeight + 2 * textData.textMargin) -\n              textData.textMargin\n          );\n        break;\n    }\n  }\n  if (\n    textData.anchor !== undefined &&\n    textData.textMargin !== undefined &&\n    textData.width !== undefined\n  ) {\n    switch (textData.anchor) {\n      case 'left':\n      case 'start':\n        textData.x = Math.round(textData.x + textData.textMargin);\n        textData.anchor = 'start';\n        textData.dominantBaseline = 'middle';\n        textData.alignmentBaseline = 'middle';\n        break;\n      case 'middle':\n      case 'center':\n        textData.x = Math.round(textData.x + textData.width / 2);\n        textData.anchor = 'middle';\n        textData.dominantBaseline = 'middle';\n        textData.alignmentBaseline = 'middle';\n        break;\n      case 'right':\n      case 'end':\n        textData.x = Math.round(textData.x + textData.width - textData.textMargin);\n        textData.anchor = 'end';\n        textData.dominantBaseline = 'middle';\n        textData.alignmentBaseline = 'middle';\n        break;\n    }\n  }\n  for (let [i, line] of lines.entries()) {\n    if (\n      textData.textMargin !== undefined &&\n      textData.textMargin === 0 &&\n      _textFontSize !== undefined\n    ) {\n      dy = i * _textFontSize;\n    }\n\n    const textElem = elem.append('text');\n    textElem.attr('x', textData.x);\n    textElem.attr('y', yfunc());\n    if (textData.anchor !== undefined) {\n      textElem\n        .attr('text-anchor', textData.anchor)\n        .attr('dominant-baseline', textData.dominantBaseline)\n        .attr('alignment-baseline', textData.alignmentBaseline);\n    }\n    if (textData.fontFamily !== undefined) {\n      textElem.style('font-family', textData.fontFamily);\n    }\n    if (_textFontSizePx !== undefined) {\n      textElem.style('font-size', _textFontSizePx);\n    }\n    if (textData.fontWeight !== undefined) {\n      textElem.style('font-weight', textData.fontWeight);\n    }\n    if (textData.fill !== undefined) {\n      textElem.attr('fill', textData.fill);\n    }\n    if (textData.class !== undefined) {\n      textElem.attr('class', textData.class);\n    }\n    if (textData.dy !== undefined) {\n      textElem.attr('dy', textData.dy);\n    } else if (dy !== 0) {\n      textElem.attr('dy', dy);\n    }\n\n    if (textData.tspan) {\n      const span = textElem.append('tspan');\n      span.attr('x', textData.x);\n      if (textData.fill !== undefined) {\n        span.attr('fill', textData.fill);\n      }\n      span.text(line);\n    } else {\n      textElem.text(line);\n    }\n    if (\n      textData.valign !== undefined &&\n      textData.textMargin !== undefined &&\n      textData.textMargin > 0\n    ) {\n      textHeight += (textElem._groups || textElem)[0][0].getBBox().height;\n      prevTextHeight = textHeight;\n    }\n\n    textElems.push(textElem);\n  }\n\n  return textElems;\n};\n\nexport const drawLabel = function (elem, txtObject) {\n  /**\n   * @param {any} x\n   * @param {any} y\n   * @param {any} width\n   * @param {any} height\n   * @param {any} cut\n   * @returns {any}\n   */\n  function genPoints(x, y, width, height, cut) {\n    return (\n      x +\n      ',' +\n      y +\n      ' ' +\n      (x + width) +\n      ',' +\n      y +\n      ' ' +\n      (x + width) +\n      ',' +\n      (y + height - cut) +\n      ' ' +\n      (x + width - cut * 1.2) +\n      ',' +\n      (y + height) +\n      ' ' +\n      x +\n      ',' +\n      (y + height)\n    );\n  }\n  const polygon = elem.append('polygon');\n  polygon.attr('points', genPoints(txtObject.x, txtObject.y, txtObject.width, txtObject.height, 7));\n  polygon.attr('class', 'labelBox');\n\n  txtObject.y = txtObject.y + txtObject.height / 2;\n\n  drawText(elem, txtObject);\n  return polygon;\n};\n\nlet actorCnt = -1;\n\nexport const fixLifeLineHeights = (diagram, bounds) => {\n  if (!diagram.selectAll) {\n    return;\n  }\n  diagram\n    .selectAll('.actor-line')\n    .attr('class', '200')\n    .attr('y2', bounds - 55);\n};\n\n/**\n * Draws an actor in the diagram with the attached line\n *\n * @param {any} elem - The diagram we'll draw to.\n * @param {any} actor - The actor to draw.\n * @param {any} conf - DrawText implementation discriminator object\n * @param {boolean} isFooter - If the actor is the footer one\n */\nconst drawActorTypeParticipant = function (elem, actor, conf, isFooter) {\n  const center = actor.x + actor.width / 2;\n  const centerY = actor.y + 5;\n\n  const boxpluslineGroup = elem.append('g');\n  var g = boxpluslineGroup;\n\n  if (!isFooter) {\n    actorCnt++;\n    g.append('line')\n      .attr('id', 'actor' + actorCnt)\n      .attr('x1', center)\n      .attr('y1', centerY)\n      .attr('x2', center)\n      .attr('y2', 2000)\n      .attr('class', 'actor-line')\n      .attr('stroke-width', '0.5px')\n      .attr('stroke', '#999');\n\n    g = boxpluslineGroup.append('g');\n    actor.actorCnt = actorCnt;\n\n    if (actor.links != null) {\n      g.attr('id', 'root-' + actorCnt);\n      addPopupInteraction('#root-' + actorCnt, actorCnt);\n    }\n  }\n\n  const rect = getNoteRect();\n  var cssclass = 'actor';\n  if (actor.properties != null && actor.properties['class']) {\n    cssclass = actor.properties['class'];\n  } else {\n    rect.fill = '#eaeaea';\n  }\n  rect.x = actor.x;\n  rect.y = actor.y;\n  rect.width = actor.width;\n  rect.height = actor.height;\n  rect.class = cssclass;\n  rect.rx = 3;\n  rect.ry = 3;\n  const rectElem = drawRect(g, rect);\n  actor.rectData = rect;\n\n  if (actor.properties != null && actor.properties['icon']) {\n    const iconSrc = actor.properties['icon'].trim();\n    if (iconSrc.charAt(0) === '@') {\n      drawEmbeddedImage(g, rect.x + rect.width - 20, rect.y + 10, iconSrc.substr(1));\n    } else {\n      drawImage(g, rect.x + rect.width - 20, rect.y + 10, iconSrc);\n    }\n  }\n\n  _drawTextCandidateFunc(conf)(\n    actor.description,\n    g,\n    rect.x,\n    rect.y,\n    rect.width,\n    rect.height,\n    { class: 'actor' },\n    conf\n  );\n\n  let height = actor.height;\n  if (rectElem.node) {\n    const bounds = rectElem.node().getBBox();\n    actor.height = bounds.height;\n    height = bounds.height;\n  }\n\n  return height;\n};\n\nconst drawActorTypeActor = function (elem, actor, conf, isFooter) {\n  const center = actor.x + actor.width / 2;\n  const centerY = actor.y + 80;\n\n  if (!isFooter) {\n    actorCnt++;\n    elem\n      .append('line')\n      .attr('id', 'actor' + actorCnt)\n      .attr('x1', center)\n      .attr('y1', centerY)\n      .attr('x2', center)\n      .attr('y2', 2000)\n      .attr('class', 'actor-line')\n      .attr('stroke-width', '0.5px')\n      .attr('stroke', '#999');\n  }\n  const actElem = elem.append('g');\n  actElem.attr('class', 'actor-man');\n\n  const rect = getNoteRect();\n  rect.x = actor.x;\n  rect.y = actor.y;\n  rect.fill = '#eaeaea';\n  rect.width = actor.width;\n  rect.height = actor.height;\n  rect.class = 'actor';\n  rect.rx = 3;\n  rect.ry = 3;\n  // drawRect(actElem, rect);\n\n  actElem\n    .append('line')\n    .attr('id', 'actor-man-torso' + actorCnt)\n    .attr('x1', center)\n    .attr('y1', actor.y + 25)\n    .attr('x2', center)\n    .attr('y2', actor.y + 45);\n\n  actElem\n    .append('line')\n    .attr('id', 'actor-man-arms' + actorCnt)\n    .attr('x1', center - 18)\n    .attr('y1', actor.y + 33)\n    .attr('x2', center + 18)\n    .attr('y2', actor.y + 33);\n  actElem\n    .append('line')\n    .attr('x1', center - 18)\n    .attr('y1', actor.y + 60)\n    .attr('x2', center)\n    .attr('y2', actor.y + 45);\n  actElem\n    .append('line')\n    .attr('x1', center)\n    .attr('y1', actor.y + 45)\n    .attr('x2', center + 16)\n    .attr('y2', actor.y + 60);\n\n  const circle = actElem.append('circle');\n  circle.attr('cx', actor.x + actor.width / 2);\n  circle.attr('cy', actor.y + 10);\n  circle.attr('r', 15);\n  circle.attr('width', actor.width);\n  circle.attr('height', actor.height);\n\n  const bounds = actElem.node().getBBox();\n  actor.height = bounds.height;\n\n  _drawTextCandidateFunc(conf)(\n    actor.description,\n    actElem,\n    rect.x,\n    rect.y + 35,\n    rect.width,\n    rect.height,\n    { class: 'actor' },\n    conf\n  );\n\n  return actor.height;\n};\n\nexport const drawActor = function (elem, actor, conf, isFooter) {\n  switch (actor.type) {\n    case 'actor':\n      return drawActorTypeActor(elem, actor, conf, isFooter);\n    case 'participant':\n      return drawActorTypeParticipant(elem, actor, conf, isFooter);\n  }\n};\n\nexport const drawBox = function (elem, box, conf) {\n  const boxplustextGroup = elem.append('g');\n  const g = boxplustextGroup;\n  drawBackgroundRect(g, box);\n  if (box.name) {\n    _drawTextCandidateFunc(conf)(\n      box.name,\n      g,\n      box.x,\n      box.y + (box.textMaxHeight || 0) / 2,\n      box.width,\n      0,\n      { class: 'text' },\n      conf\n    );\n  }\n  g.lower();\n};\n\nexport const anchorElement = function (elem) {\n  return elem.append('g');\n};\n/**\n * Draws an activation in the diagram\n *\n * @param {any} elem - Element to append activation rect.\n * @param {any} bounds - Activation box bounds.\n * @param {any} verticalPos - Precise y coordinate of bottom activation box edge.\n * @param {any} conf - Sequence diagram config object.\n * @param {any} actorActivations - Number of activations on the actor.\n */\nexport const drawActivation = function (elem, bounds, verticalPos, conf, actorActivations) {\n  const rect = getNoteRect();\n  const g = bounds.anchored;\n  rect.x = bounds.startx;\n  rect.y = bounds.starty;\n  rect.class = 'activation' + (actorActivations % 3); // Will evaluate to 0, 1 or 2\n  rect.width = bounds.stopx - bounds.startx;\n  rect.height = verticalPos - bounds.starty;\n  drawRect(g, rect);\n};\n\n/**\n * Draws a loop in the diagram\n *\n * @param {any} elem - Element to append the loop to.\n * @param {any} loopModel - LoopModel of the given loop.\n * @param {any} labelText - Text within the loop.\n * @param {any} conf - Diagram configuration\n * @returns {any}\n */\nexport const drawLoop = function (elem, loopModel, labelText, conf) {\n  const {\n    boxMargin,\n    boxTextMargin,\n    labelBoxHeight,\n    labelBoxWidth,\n    messageFontFamily: fontFamily,\n    messageFontSize: fontSize,\n    messageFontWeight: fontWeight,\n  } = conf;\n  const g = elem.append('g');\n  const drawLoopLine = function (startx, starty, stopx, stopy) {\n    return g\n      .append('line')\n      .attr('x1', startx)\n      .attr('y1', starty)\n      .attr('x2', stopx)\n      .attr('y2', stopy)\n      .attr('class', 'loopLine');\n  };\n  drawLoopLine(loopModel.startx, loopModel.starty, loopModel.stopx, loopModel.starty);\n  drawLoopLine(loopModel.stopx, loopModel.starty, loopModel.stopx, loopModel.stopy);\n  drawLoopLine(loopModel.startx, loopModel.stopy, loopModel.stopx, loopModel.stopy);\n  drawLoopLine(loopModel.startx, loopModel.starty, loopModel.startx, loopModel.stopy);\n  if (loopModel.sections !== undefined) {\n    loopModel.sections.forEach(function (item) {\n      drawLoopLine(loopModel.startx, item.y, loopModel.stopx, item.y).style(\n        'stroke-dasharray',\n        '3, 3'\n      );\n    });\n  }\n\n  let txt = getTextObj();\n  txt.text = labelText;\n  txt.x = loopModel.startx;\n  txt.y = loopModel.starty;\n  txt.fontFamily = fontFamily;\n  txt.fontSize = fontSize;\n  txt.fontWeight = fontWeight;\n  txt.anchor = 'middle';\n  txt.valign = 'middle';\n  txt.tspan = false;\n  txt.width = labelBoxWidth || 50;\n  txt.height = labelBoxHeight || 20;\n  txt.textMargin = boxTextMargin;\n  txt.class = 'labelText';\n\n  drawLabel(g, txt);\n  txt = getTextObj();\n  txt.text = loopModel.title;\n  txt.x = loopModel.startx + labelBoxWidth / 2 + (loopModel.stopx - loopModel.startx) / 2;\n  txt.y = loopModel.starty + boxMargin + boxTextMargin;\n  txt.anchor = 'middle';\n  txt.valign = 'middle';\n  txt.textMargin = boxTextMargin;\n  txt.class = 'loopText';\n  txt.fontFamily = fontFamily;\n  txt.fontSize = fontSize;\n  txt.fontWeight = fontWeight;\n  txt.wrap = true;\n\n  let textElem = drawText(g, txt);\n\n  if (loopModel.sectionTitles !== undefined) {\n    loopModel.sectionTitles.forEach(function (item, idx) {\n      if (item.message) {\n        txt.text = item.message;\n        txt.x = loopModel.startx + (loopModel.stopx - loopModel.startx) / 2;\n        txt.y = loopModel.sections[idx].y + boxMargin + boxTextMargin;\n        txt.class = 'loopText';\n        txt.anchor = 'middle';\n        txt.valign = 'middle';\n        txt.tspan = false;\n        txt.fontFamily = fontFamily;\n        txt.fontSize = fontSize;\n        txt.fontWeight = fontWeight;\n        txt.wrap = loopModel.wrap;\n        textElem = drawText(g, txt);\n        let sectionHeight = Math.round(\n          textElem\n            .map((te) => (te._groups || te)[0][0].getBBox().height)\n            .reduce((acc, curr) => acc + curr)\n        );\n        loopModel.sections[idx].height += sectionHeight - (boxMargin + boxTextMargin);\n      }\n    });\n  }\n\n  loopModel.height = Math.round(loopModel.stopy - loopModel.starty);\n  return g;\n};\n\n/**\n * Draws a background rectangle\n *\n * @param {any} elem Diagram (reference for bounds)\n * @param {any} bounds Shape of the rectangle\n */\nexport const drawBackgroundRect = function (elem, bounds) {\n  const rectElem = drawRect(elem, {\n    x: bounds.startx,\n    y: bounds.starty,\n    width: bounds.stopx - bounds.startx,\n    height: bounds.stopy - bounds.starty,\n    fill: bounds.fill,\n    stroke: bounds.stroke,\n    class: 'rect',\n  });\n  rectElem.lower();\n};\n\nexport const insertDatabaseIcon = function (elem) {\n  elem\n    .append('defs')\n    .append('symbol')\n    .attr('id', 'database')\n    .attr('fill-rule', 'evenodd')\n    .attr('clip-rule', 'evenodd')\n    .append('path')\n    .attr('transform', 'scale(.5)')\n    .attr(\n      'd',\n      'M12.258.001l.256.004.255.005.253.008.251.01.249.012.247.015.246.016.242.019.241.02.239.023.236.024.233.027.231.028.229.031.225.032.223.034.22.036.217.038.214.04.211.041.208.043.205.045.201.046.198.048.194.05.191.051.187.053.183.054.18.056.175.057.172.059.168.06.163.061.16.063.155.064.15.066.074.033.073.033.071.034.07.034.069.035.068.035.067.035.066.035.064.036.064.036.062.036.06.036.06.037.058.037.058.037.055.038.055.038.053.038.052.038.051.039.05.039.048.039.047.039.045.04.044.04.043.04.041.04.04.041.039.041.037.041.036.041.034.041.033.042.032.042.03.042.029.042.027.042.026.043.024.043.023.043.021.043.02.043.018.044.017.043.015.044.013.044.012.044.011.045.009.044.007.045.006.045.004.045.002.045.001.045v17l-.001.045-.002.045-.004.045-.006.045-.007.045-.009.044-.011.045-.012.044-.013.044-.015.044-.017.043-.018.044-.02.043-.021.043-.023.043-.024.043-.026.043-.027.042-.029.042-.03.042-.032.042-.033.042-.034.041-.036.041-.037.041-.039.041-.04.041-.041.04-.043.04-.044.04-.045.04-.047.039-.048.039-.05.039-.051.039-.052.038-.053.038-.055.038-.055.038-.058.037-.058.037-.06.037-.06.036-.062.036-.064.036-.064.036-.066.035-.067.035-.068.035-.069.035-.07.034-.071.034-.073.033-.074.033-.15.066-.155.064-.16.063-.163.061-.168.06-.172.059-.175.057-.18.056-.183.054-.187.053-.191.051-.194.05-.198.048-.201.046-.205.045-.208.043-.211.041-.214.04-.217.038-.22.036-.223.034-.225.032-.229.031-.231.028-.233.027-.236.024-.239.023-.241.02-.242.019-.246.016-.247.015-.249.012-.251.01-.253.008-.255.005-.256.004-.258.001-.258-.001-.256-.004-.255-.005-.253-.008-.251-.01-.249-.012-.247-.015-.245-.016-.243-.019-.241-.02-.238-.023-.236-.024-.234-.027-.231-.028-.228-.031-.226-.032-.223-.034-.22-.036-.217-.038-.214-.04-.211-.041-.208-.043-.204-.045-.201-.046-.198-.048-.195-.05-.19-.051-.187-.053-.184-.054-.179-.056-.176-.057-.172-.059-.167-.06-.164-.061-.159-.063-.155-.064-.151-.066-.074-.033-.072-.033-.072-.034-.07-.034-.069-.035-.068-.035-.067-.035-.066-.035-.064-.036-.063-.036-.062-.036-.061-.036-.06-.037-.058-.037-.057-.037-.056-.038-.055-.038-.053-.038-.052-.038-.051-.039-.049-.039-.049-.039-.046-.039-.046-.04-.044-.04-.043-.04-.041-.04-.04-.041-.039-.041-.037-.041-.036-.041-.034-.041-.033-.042-.032-.042-.03-.042-.029-.042-.027-.042-.026-.043-.024-.043-.023-.043-.021-.043-.02-.043-.018-.044-.017-.043-.015-.044-.013-.044-.012-.044-.011-.045-.009-.044-.007-.045-.006-.045-.004-.045-.002-.045-.001-.045v-17l.001-.045.002-.045.004-.045.006-.045.007-.045.009-.044.011-.045.012-.044.013-.044.015-.044.017-.043.018-.044.02-.043.021-.043.023-.043.024-.043.026-.043.027-.042.029-.042.03-.042.032-.042.033-.042.034-.041.036-.041.037-.041.039-.041.04-.041.041-.04.043-.04.044-.04.046-.04.046-.039.049-.039.049-.039.051-.039.052-.038.053-.038.055-.038.056-.038.057-.037.058-.037.06-.037.061-.036.062-.036.063-.036.064-.036.066-.035.067-.035.068-.035.069-.035.07-.034.072-.034.072-.033.074-.033.151-.066.155-.064.159-.063.164-.061.167-.06.172-.059.176-.057.179-.056.184-.054.187-.053.19-.051.195-.05.198-.048.201-.046.204-.045.208-.043.211-.041.214-.04.217-.038.22-.036.223-.034.226-.032.228-.031.231-.028.234-.027.236-.024.238-.023.241-.02.243-.019.245-.016.247-.015.249-.012.251-.01.253-.008.255-.005.256-.004.258-.001.258.001zm-9.258 20.499v.01l.001.021.003.021.004.022.005.021.006.022.007.022.009.023.01.022.011.023.012.023.013.023.015.023.016.024.017.023.018.024.019.024.021.024.022.025.023.024.024.025.052.049.056.05.061.051.066.051.07.051.075.051.079.052.084.052.088.052.092.052.097.052.102.051.105.052.11.052.114.051.119.051.123.051.127.05.131.05.135.05.139.048.144.049.147.047.152.047.155.047.16.045.163.045.167.043.171.043.176.041.178.041.183.039.187.039.19.037.194.035.197.035.202.033.204.031.209.03.212.029.216.027.219.025.222.024.226.021.23.02.233.018.236.016.24.015.243.012.246.01.249.008.253.005.256.004.259.001.26-.001.257-.004.254-.005.25-.008.247-.011.244-.012.241-.014.237-.016.233-.018.231-.021.226-.021.224-.024.22-.026.216-.027.212-.028.21-.031.205-.031.202-.034.198-.034.194-.036.191-.037.187-.039.183-.04.179-.04.175-.042.172-.043.168-.044.163-.045.16-.046.155-.046.152-.047.148-.048.143-.049.139-.049.136-.05.131-.05.126-.05.123-.051.118-.052.114-.051.11-.052.106-.052.101-.052.096-.052.092-.052.088-.053.083-.051.079-.052.074-.052.07-.051.065-.051.06-.051.056-.05.051-.05.023-.024.023-.025.021-.024.02-.024.019-.024.018-.024.017-.024.015-.023.014-.024.013-.023.012-.023.01-.023.01-.022.008-.022.006-.022.006-.022.004-.022.004-.021.001-.021.001-.021v-4.127l-.077.055-.08.053-.083.054-.085.053-.087.052-.09.052-.093.051-.095.05-.097.05-.1.049-.102.049-.105.048-.106.047-.109.047-.111.046-.114.045-.115.045-.118.044-.12.043-.122.042-.124.042-.126.041-.128.04-.13.04-.132.038-.134.038-.135.037-.138.037-.139.035-.142.035-.143.034-.144.033-.147.032-.148.031-.15.03-.151.03-.153.029-.154.027-.156.027-.158.026-.159.025-.161.024-.162.023-.163.022-.165.021-.166.02-.167.019-.169.018-.169.017-.171.016-.173.015-.173.014-.175.013-.175.012-.177.011-.178.01-.179.008-.179.008-.181.006-.182.005-.182.004-.184.003-.184.002h-.37l-.184-.002-.184-.003-.182-.004-.182-.005-.181-.006-.179-.008-.179-.008-.178-.01-.176-.011-.176-.012-.175-.013-.173-.014-.172-.015-.171-.016-.17-.017-.169-.018-.167-.019-.166-.02-.165-.021-.163-.022-.162-.023-.161-.024-.159-.025-.157-.026-.156-.027-.155-.027-.153-.029-.151-.03-.15-.03-.148-.031-.146-.032-.145-.033-.143-.034-.141-.035-.14-.035-.137-.037-.136-.037-.134-.038-.132-.038-.13-.04-.128-.04-.126-.041-.124-.042-.122-.042-.12-.044-.117-.043-.116-.045-.113-.045-.112-.046-.109-.047-.106-.047-.105-.048-.102-.049-.1-.049-.097-.05-.095-.05-.093-.052-.09-.051-.087-.052-.085-.053-.083-.054-.08-.054-.077-.054v4.127zm0-5.654v.011l.001.021.003.021.004.021.005.022.006.022.007.022.009.022.01.022.011.023.012.023.013.023.015.024.016.023.017.024.018.024.019.024.021.024.022.024.023.025.024.024.052.05.056.05.061.05.066.051.07.051.075.052.079.051.084.052.088.052.092.052.097.052.102.052.105.052.11.051.114.051.119.052.123.05.127.051.131.05.135.049.139.049.144.048.147.048.152.047.155.046.16.045.163.045.167.044.171.042.176.042.178.04.183.04.187.038.19.037.194.036.197.034.202.033.204.032.209.03.212.028.216.027.219.025.222.024.226.022.23.02.233.018.236.016.24.014.243.012.246.01.249.008.253.006.256.003.259.001.26-.001.257-.003.254-.006.25-.008.247-.01.244-.012.241-.015.237-.016.233-.018.231-.02.226-.022.224-.024.22-.025.216-.027.212-.029.21-.03.205-.032.202-.033.198-.035.194-.036.191-.037.187-.039.183-.039.179-.041.175-.042.172-.043.168-.044.163-.045.16-.045.155-.047.152-.047.148-.048.143-.048.139-.05.136-.049.131-.05.126-.051.123-.051.118-.051.114-.052.11-.052.106-.052.101-.052.096-.052.092-.052.088-.052.083-.052.079-.052.074-.051.07-.052.065-.051.06-.05.056-.051.051-.049.023-.025.023-.024.021-.025.02-.024.019-.024.018-.024.017-.024.015-.023.014-.023.013-.024.012-.022.01-.023.01-.023.008-.022.006-.022.006-.022.004-.021.004-.022.001-.021.001-.021v-4.139l-.077.054-.08.054-.083.054-.085.052-.087.053-.09.051-.093.051-.095.051-.097.05-.1.049-.102.049-.105.048-.106.047-.109.047-.111.046-.114.045-.115.044-.118.044-.12.044-.122.042-.124.042-.126.041-.128.04-.13.039-.132.039-.134.038-.135.037-.138.036-.139.036-.142.035-.143.033-.144.033-.147.033-.148.031-.15.03-.151.03-.153.028-.154.028-.156.027-.158.026-.159.025-.161.024-.162.023-.163.022-.165.021-.166.02-.167.019-.169.018-.169.017-.171.016-.173.015-.173.014-.175.013-.175.012-.177.011-.178.009-.179.009-.179.007-.181.007-.182.005-.182.004-.184.003-.184.002h-.37l-.184-.002-.184-.003-.182-.004-.182-.005-.181-.007-.179-.007-.179-.009-.178-.009-.176-.011-.176-.012-.175-.013-.173-.014-.172-.015-.171-.016-.17-.017-.169-.018-.167-.019-.166-.02-.165-.021-.163-.022-.162-.023-.161-.024-.159-.025-.157-.026-.156-.027-.155-.028-.153-.028-.151-.03-.15-.03-.148-.031-.146-.033-.145-.033-.143-.033-.141-.035-.14-.036-.137-.036-.136-.037-.134-.038-.132-.039-.13-.039-.128-.04-.126-.041-.124-.042-.122-.043-.12-.043-.117-.044-.116-.044-.113-.046-.112-.046-.109-.046-.106-.047-.105-.048-.102-.049-.1-.049-.097-.05-.095-.051-.093-.051-.09-.051-.087-.053-.085-.052-.083-.054-.08-.054-.077-.054v4.139zm0-5.666v.011l.001.02.003.022.004.021.005.022.006.021.007.022.009.023.01.022.011.023.012.023.013.023.015.023.016.024.017.024.018.023.019.024.021.025.022.024.023.024.024.025.052.05.056.05.061.05.066.051.07.051.075.052.079.051.084.052.088.052.092.052.097.052.102.052.105.051.11.052.114.051.119.051.123.051.127.05.131.05.135.05.139.049.144.048.147.048.152.047.155.046.16.045.163.045.167.043.171.043.176.042.178.04.183.04.187.038.19.037.194.036.197.034.202.033.204.032.209.03.212.028.216.027.219.025.222.024.226.021.23.02.233.018.236.017.24.014.243.012.246.01.249.008.253.006.256.003.259.001.26-.001.257-.003.254-.006.25-.008.247-.01.244-.013.241-.014.237-.016.233-.018.231-.02.226-.022.224-.024.22-.025.216-.027.212-.029.21-.03.205-.032.202-.033.198-.035.194-.036.191-.037.187-.039.183-.039.179-.041.175-.042.172-.043.168-.044.163-.045.16-.045.155-.047.152-.047.148-.048.143-.049.139-.049.136-.049.131-.051.126-.05.123-.051.118-.052.114-.051.11-.052.106-.052.101-.052.096-.052.092-.052.088-.052.083-.052.079-.052.074-.052.07-.051.065-.051.06-.051.056-.05.051-.049.023-.025.023-.025.021-.024.02-.024.019-.024.018-.024.017-.024.015-.023.014-.024.013-.023.012-.023.01-.022.01-.023.008-.022.006-.022.006-.022.004-.022.004-.021.001-.021.001-.021v-4.153l-.077.054-.08.054-.083.053-.085.053-.087.053-.09.051-.093.051-.095.051-.097.05-.1.049-.102.048-.105.048-.106.048-.109.046-.111.046-.114.046-.115.044-.118.044-.12.043-.122.043-.124.042-.126.041-.128.04-.13.039-.132.039-.134.038-.135.037-.138.036-.139.036-.142.034-.143.034-.144.033-.147.032-.148.032-.15.03-.151.03-.153.028-.154.028-.156.027-.158.026-.159.024-.161.024-.162.023-.163.023-.165.021-.166.02-.167.019-.169.018-.169.017-.171.016-.173.015-.173.014-.175.013-.175.012-.177.01-.178.01-.179.009-.179.007-.181.006-.182.006-.182.004-.184.003-.184.001-.185.001-.185-.001-.184-.001-.184-.003-.182-.004-.182-.006-.181-.006-.179-.007-.179-.009-.178-.01-.176-.01-.176-.012-.175-.013-.173-.014-.172-.015-.171-.016-.17-.017-.169-.018-.167-.019-.166-.02-.165-.021-.163-.023-.162-.023-.161-.024-.159-.024-.157-.026-.156-.027-.155-.028-.153-.028-.151-.03-.15-.03-.148-.032-.146-.032-.145-.033-.143-.034-.141-.034-.14-.036-.137-.036-.136-.037-.134-.038-.132-.039-.13-.039-.128-.041-.126-.041-.124-.041-.122-.043-.12-.043-.117-.044-.116-.044-.113-.046-.112-.046-.109-.046-.106-.048-.105-.048-.102-.048-.1-.05-.097-.049-.095-.051-.093-.051-.09-.052-.087-.052-.085-.053-.083-.053-.08-.054-.077-.054v4.153zm8.74-8.179l-.257.004-.254.005-.25.008-.247.011-.244.012-.241.014-.237.016-.233.018-.231.021-.226.022-.224.023-.22.026-.216.027-.212.028-.21.031-.205.032-.202.033-.198.034-.194.036-.191.038-.187.038-.183.04-.179.041-.175.042-.172.043-.168.043-.163.045-.16.046-.155.046-.152.048-.148.048-.143.048-.139.049-.136.05-.131.05-.126.051-.123.051-.118.051-.114.052-.11.052-.106.052-.101.052-.096.052-.092.052-.088.052-.083.052-.079.052-.074.051-.07.052-.065.051-.06.05-.056.05-.051.05-.023.025-.023.024-.021.024-.02.025-.019.024-.018.024-.017.023-.015.024-.014.023-.013.023-.012.023-.01.023-.01.022-.008.022-.006.023-.006.021-.004.022-.004.021-.001.021-.001.021.001.021.001.021.004.021.004.022.006.021.006.023.008.022.01.022.01.023.012.023.013.023.014.023.015.024.017.023.018.024.019.024.02.025.021.024.023.024.023.025.051.05.056.05.06.05.065.051.07.052.074.051.079.052.083.052.088.052.092.052.096.052.101.052.106.052.11.052.114.052.118.051.123.051.126.051.131.05.136.05.139.049.143.048.148.048.152.048.155.046.16.046.163.045.168.043.172.043.175.042.179.041.183.04.187.038.191.038.194.036.198.034.202.033.205.032.21.031.212.028.216.027.22.026.224.023.226.022.231.021.233.018.237.016.241.014.244.012.247.011.25.008.254.005.257.004.26.001.26-.001.257-.004.254-.005.25-.008.247-.011.244-.012.241-.014.237-.016.233-.018.231-.021.226-.022.224-.023.22-.026.216-.027.212-.028.21-.031.205-.032.202-.033.198-.034.194-.036.191-.038.187-.038.183-.04.179-.041.175-.042.172-.043.168-.043.163-.045.16-.046.155-.046.152-.048.148-.048.143-.048.139-.049.136-.05.131-.05.126-.051.123-.051.118-.051.114-.052.11-.052.106-.052.101-.052.096-.052.092-.052.088-.052.083-.052.079-.052.074-.051.07-.052.065-.051.06-.05.056-.05.051-.05.023-.025.023-.024.021-.024.02-.025.019-.024.018-.024.017-.023.015-.024.014-.023.013-.023.012-.023.01-.023.01-.022.008-.022.006-.023.006-.021.004-.022.004-.021.001-.021.001-.021-.001-.021-.001-.021-.004-.021-.004-.022-.006-.021-.006-.023-.008-.022-.01-.022-.01-.023-.012-.023-.013-.023-.014-.023-.015-.024-.017-.023-.018-.024-.019-.024-.02-.025-.021-.024-.023-.024-.023-.025-.051-.05-.056-.05-.06-.05-.065-.051-.07-.052-.074-.051-.079-.052-.083-.052-.088-.052-.092-.052-.096-.052-.101-.052-.106-.052-.11-.052-.114-.052-.118-.051-.123-.051-.126-.051-.131-.05-.136-.05-.139-.049-.143-.048-.148-.048-.152-.048-.155-.046-.16-.046-.163-.045-.168-.043-.172-.043-.175-.042-.179-.041-.183-.04-.187-.038-.191-.038-.194-.036-.198-.034-.202-.033-.205-.032-.21-.031-.212-.028-.216-.027-.22-.026-.224-.023-.226-.022-.231-.021-.233-.018-.237-.016-.241-.014-.244-.012-.247-.011-.25-.008-.254-.005-.257-.004-.26-.001-.26.001z'\n    );\n};\n\nexport const insertComputerIcon = function (elem) {\n  elem\n    .append('defs')\n    .append('symbol')\n    .attr('id', 'computer')\n    .attr('width', '24')\n    .attr('height', '24')\n    .append('path')\n    .attr('transform', 'scale(.5)')\n    .attr(\n      'd',\n      'M2 2v13h20v-13h-20zm18 11h-16v-9h16v9zm-10.228 6l.466-1h3.524l.467 1h-4.457zm14.228 3h-24l2-6h2.104l-1.33 4h18.45l-1.297-4h2.073l2 6zm-5-10h-14v-7h14v7z'\n    );\n};\n\nexport const insertClockIcon = function (elem) {\n  elem\n    .append('defs')\n    .append('symbol')\n    .attr('id', 'clock')\n    .attr('width', '24')\n    .attr('height', '24')\n    .append('path')\n    .attr('transform', 'scale(.5)')\n    .attr(\n      'd',\n      'M12 2c5.514 0 10 4.486 10 10s-4.486 10-10 10-10-4.486-10-10 4.486-10 10-10zm0-2c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm5.848 12.459c.202.038.202.333.001.372-1.907.361-6.045 1.111-6.547 1.111-.719 0-1.301-.582-1.301-1.301 0-.512.77-5.447 1.125-7.445.034-.192.312-.181.343.014l.985 6.238 5.394 1.011z'\n    );\n};\n\n/**\n * Setup arrow head and define the marker. The result is appended to the svg.\n *\n * @param elem\n */\nexport const insertArrowHead = function (elem) {\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', 'arrowhead')\n    .attr('refX', 9)\n    .attr('refY', 5)\n    .attr('markerUnits', 'userSpaceOnUse')\n    .attr('markerWidth', 12)\n    .attr('markerHeight', 12)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M 0 0 L 10 5 L 0 10 z'); // this is actual shape for arrowhead\n};\n/**\n * Setup arrow head and define the marker. The result is appended to the svg.\n *\n * @param {any} elem\n */\nexport const insertArrowFilledHead = function (elem) {\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', 'filled-head')\n    .attr('refX', 18)\n    .attr('refY', 7)\n    .attr('markerWidth', 20)\n    .attr('markerHeight', 28)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M 18,7 L9,13 L14,7 L9,1 Z');\n};\n/**\n * Setup node number. The result is appended to the svg.\n *\n * @param {any} elem\n */\nexport const insertSequenceNumber = function (elem) {\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', 'sequencenumber')\n    .attr('refX', 15)\n    .attr('refY', 15)\n    .attr('markerWidth', 60)\n    .attr('markerHeight', 40)\n    .attr('orient', 'auto')\n    .append('circle')\n    .attr('cx', 15)\n    .attr('cy', 15)\n    .attr('r', 6);\n  // .style(\"fill\", '#f00');\n};\n/**\n * Setup cross head and define the marker. The result is appended to the svg.\n *\n * @param {any} elem\n */\nexport const insertArrowCrossHead = function (elem) {\n  const defs = elem.append('defs');\n  const marker = defs\n    .append('marker')\n    .attr('id', 'crosshead')\n    .attr('markerWidth', 15)\n    .attr('markerHeight', 8)\n    .attr('orient', 'auto')\n    .attr('refX', 4)\n    .attr('refY', 5);\n  // The cross\n  marker\n    .append('path')\n    .attr('fill', 'none')\n    .attr('stroke', '#000000')\n    .style('stroke-dasharray', '0, 0')\n    .attr('stroke-width', '1pt')\n    .attr('d', 'M 1,2 L 6,7 M 6,2 L 1,7');\n  // this is actual shape for arrowhead\n};\n\nexport const getTextObj = function () {\n  return {\n    x: 0,\n    y: 0,\n    fill: undefined,\n    anchor: undefined,\n    style: '#666',\n    width: undefined,\n    height: undefined,\n    textMargin: 0,\n    rx: 0,\n    ry: 0,\n    tspan: true,\n    valign: undefined,\n  };\n};\n\nexport const getNoteRect = function () {\n  return {\n    x: 0,\n    y: 0,\n    fill: '#EDF2AE',\n    stroke: '#666',\n    width: 100,\n    anchor: 'start',\n    height: 100,\n    rx: 0,\n    ry: 0,\n  };\n};\n\nconst _drawTextCandidateFunc = (function () {\n  /**\n   * @param {any} content\n   * @param {any} g\n   * @param {any} x\n   * @param {any} y\n   * @param {any} width\n   * @param {any} height\n   * @param {any} textAttrs\n   */\n  function byText(content, g, x, y, width, height, textAttrs) {\n    const text = g\n      .append('text')\n      .attr('x', x + width / 2)\n      .attr('y', y + height / 2 + 5)\n      .style('text-anchor', 'middle')\n      .text(content);\n    _setTextAttrs(text, textAttrs);\n  }\n\n  /**\n   * @param {any} content\n   * @param {any} g\n   * @param {any} x\n   * @param {any} y\n   * @param {any} width\n   * @param {any} height\n   * @param {any} textAttrs\n   * @param {any} conf\n   */\n  function byTspan(content, g, x, y, width, height, textAttrs, conf) {\n    const { actorFontSize, actorFontFamily, actorFontWeight } = conf;\n\n    const [_actorFontSize, _actorFontSizePx] = parseFontSize(actorFontSize);\n\n    const lines = content.split(common.lineBreakRegex);\n    for (let i = 0; i < lines.length; i++) {\n      const dy = i * _actorFontSize - (_actorFontSize * (lines.length - 1)) / 2;\n      const text = g\n        .append('text')\n        .attr('x', x + width / 2)\n        .attr('y', y)\n        .style('text-anchor', 'middle')\n        .style('font-size', _actorFontSizePx)\n        .style('font-weight', actorFontWeight)\n        .style('font-family', actorFontFamily);\n      text\n        .append('tspan')\n        .attr('x', x + width / 2)\n        .attr('dy', dy)\n        .text(lines[i]);\n\n      text\n        .attr('y', y + height / 2.0)\n        .attr('dominant-baseline', 'central')\n        .attr('alignment-baseline', 'central');\n\n      _setTextAttrs(text, textAttrs);\n    }\n  }\n\n  /**\n   * @param {any} content\n   * @param {any} g\n   * @param {any} x\n   * @param {any} y\n   * @param {any} width\n   * @param {any} height\n   * @param {any} textAttrs\n   * @param {any} conf\n   */\n  function byFo(content, g, x, y, width, height, textAttrs, conf) {\n    const s = g.append('switch');\n    const f = s\n      .append('foreignObject')\n      .attr('x', x)\n      .attr('y', y)\n      .attr('width', width)\n      .attr('height', height);\n\n    const text = f\n      .append('xhtml:div')\n      .style('display', 'table')\n      .style('height', '100%')\n      .style('width', '100%');\n\n    text\n      .append('div')\n      .style('display', 'table-cell')\n      .style('text-align', 'center')\n      .style('vertical-align', 'middle')\n      .text(content);\n\n    byTspan(content, s, x, y, width, height, textAttrs, conf);\n    _setTextAttrs(text, textAttrs);\n  }\n\n  /**\n   * @param {any} toText\n   * @param {any} fromTextAttrsDict\n   */\n  function _setTextAttrs(toText, fromTextAttrsDict) {\n    for (const key in fromTextAttrsDict) {\n      if (fromTextAttrsDict.hasOwnProperty(key)) {\n        toText.attr(key, fromTextAttrsDict[key]);\n      }\n    }\n  }\n\n  return function (conf) {\n    return conf.textPlacement === 'fo' ? byFo : conf.textPlacement === 'old' ? byText : byTspan;\n  };\n})();\n\nconst _drawMenuItemTextCandidateFunc = (function () {\n  /**\n   * @param {any} content\n   * @param {any} g\n   * @param {any} x\n   * @param {any} y\n   * @param {any} width\n   * @param {any} height\n   * @param {any} textAttrs\n   */\n  function byText(content, g, x, y, width, height, textAttrs) {\n    const text = g\n      .append('text')\n      .attr('x', x)\n      .attr('y', y)\n      .style('text-anchor', 'start')\n      .text(content);\n    _setTextAttrs(text, textAttrs);\n  }\n\n  /**\n   * @param {any} content\n   * @param {any} g\n   * @param {any} x\n   * @param {any} y\n   * @param {any} width\n   * @param {any} height\n   * @param {any} textAttrs\n   * @param {any} conf\n   */\n  function byTspan(content, g, x, y, width, height, textAttrs, conf) {\n    const { actorFontSize, actorFontFamily, actorFontWeight } = conf;\n\n    const lines = content.split(common.lineBreakRegex);\n    for (let i = 0; i < lines.length; i++) {\n      const dy = i * actorFontSize - (actorFontSize * (lines.length - 1)) / 2;\n      const text = g\n        .append('text')\n        .attr('x', x)\n        .attr('y', y)\n        .style('text-anchor', 'start')\n        .style('font-size', actorFontSize)\n        .style('font-weight', actorFontWeight)\n        .style('font-family', actorFontFamily);\n      text.append('tspan').attr('x', x).attr('dy', dy).text(lines[i]);\n\n      text\n        .attr('y', y + height / 2.0)\n        .attr('dominant-baseline', 'central')\n        .attr('alignment-baseline', 'central');\n\n      _setTextAttrs(text, textAttrs);\n    }\n  }\n\n  /**\n   * @param {any} content\n   * @param {any} g\n   * @param {any} x\n   * @param {any} y\n   * @param {any} width\n   * @param {any} height\n   * @param {any} textAttrs\n   * @param {any} conf\n   */\n  function byFo(content, g, x, y, width, height, textAttrs, conf) {\n    const s = g.append('switch');\n    const f = s\n      .append('foreignObject')\n      .attr('x', x)\n      .attr('y', y)\n      .attr('width', width)\n      .attr('height', height);\n\n    const text = f\n      .append('xhtml:div')\n      .style('display', 'table')\n      .style('height', '100%')\n      .style('width', '100%');\n\n    text\n      .append('div')\n      .style('display', 'table-cell')\n      .style('text-align', 'center')\n      .style('vertical-align', 'middle')\n      .text(content);\n\n    byTspan(content, s, x, y, width, height, textAttrs, conf);\n    _setTextAttrs(text, textAttrs);\n  }\n\n  /**\n   * @param {any} toText\n   * @param {any} fromTextAttrsDict\n   */\n  function _setTextAttrs(toText, fromTextAttrsDict) {\n    for (const key in fromTextAttrsDict) {\n      if (fromTextAttrsDict.hasOwnProperty(key)) {\n        toText.attr(key, fromTextAttrsDict[key]);\n      }\n    }\n  }\n\n  return function (conf) {\n    return conf.textPlacement === 'fo' ? byFo : conf.textPlacement === 'old' ? byText : byTspan;\n  };\n})();\n\nexport default {\n  drawRect,\n  drawText,\n  drawLabel,\n  drawActor,\n  drawBox,\n  drawPopup,\n  drawImage,\n  drawEmbeddedImage,\n  anchorElement,\n  drawActivation,\n  drawLoop,\n  drawBackgroundRect,\n  insertArrowHead,\n  insertArrowFilledHead,\n  insertSequenceNumber,\n  insertArrowCrossHead,\n  insertDatabaseIcon,\n  insertComputerIcon,\n  insertClockIcon,\n  getTextObj,\n  getNoteRect,\n  popupMenu,\n  popdownMenu,\n  fixLifeLineHeights,\n  sanitizeUrl,\n};\n","// @ts-nocheck TODO: fix file\nimport { select, selectAll } from 'd3';\nimport svgDraw, { drawText, fixLifeLineHeights } from './svgDraw';\nimport { log } from '../../logger';\nimport common from '../common/common';\nimport * as configApi from '../../config';\nimport assignWithDepth from '../../assignWithDepth';\nimport utils from '../../utils';\nimport { configureSvgSize } from '../../setupGraphViewbox';\nimport { Diagram } from '../../Diagram';\n\nlet conf = {};\n\nexport const bounds = {\n  data: {\n    startx: undefined,\n    stopx: undefined,\n    starty: undefined,\n    stopy: undefined,\n  },\n  verticalPos: 0,\n  sequenceItems: [],\n  activations: [],\n  models: {\n    getHeight: function () {\n      return (\n        Math.max.apply(\n          null,\n          this.actors.length === 0 ? [0] : this.actors.map((actor) => actor.height || 0)\n        ) +\n        (this.loops.length === 0\n          ? 0\n          : this.loops.map((it) => it.height || 0).reduce((acc, h) => acc + h)) +\n        (this.messages.length === 0\n          ? 0\n          : this.messages.map((it) => it.height || 0).reduce((acc, h) => acc + h)) +\n        (this.notes.length === 0\n          ? 0\n          : this.notes.map((it) => it.height || 0).reduce((acc, h) => acc + h))\n      );\n    },\n    clear: function () {\n      this.actors = [];\n      this.boxes = [];\n      this.loops = [];\n      this.messages = [];\n      this.notes = [];\n    },\n    addBox: function (boxModel) {\n      this.boxes.push(boxModel);\n    },\n    addActor: function (actorModel) {\n      this.actors.push(actorModel);\n    },\n    addLoop: function (loopModel) {\n      this.loops.push(loopModel);\n    },\n    addMessage: function (msgModel) {\n      this.messages.push(msgModel);\n    },\n    addNote: function (noteModel) {\n      this.notes.push(noteModel);\n    },\n    lastActor: function () {\n      return this.actors[this.actors.length - 1];\n    },\n    lastLoop: function () {\n      return this.loops[this.loops.length - 1];\n    },\n    lastMessage: function () {\n      return this.messages[this.messages.length - 1];\n    },\n    lastNote: function () {\n      return this.notes[this.notes.length - 1];\n    },\n    actors: [],\n    boxes: [],\n    loops: [],\n    messages: [],\n    notes: [],\n  },\n  init: function () {\n    this.sequenceItems = [];\n    this.activations = [];\n    this.models.clear();\n    this.data = {\n      startx: undefined,\n      stopx: undefined,\n      starty: undefined,\n      stopy: undefined,\n    };\n    this.verticalPos = 0;\n    setConf(configApi.getConfig());\n  },\n  updateVal: function (obj, key, val, fun) {\n    if (obj[key] === undefined) {\n      obj[key] = val;\n    } else {\n      obj[key] = fun(val, obj[key]);\n    }\n  },\n  updateBounds: function (startx, starty, stopx, stopy) {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const _self = this;\n    let cnt = 0;\n    /** @param type - Either `activation` or `undefined` */\n    function updateFn(type?: 'activation') {\n      return function updateItemBounds(item) {\n        cnt++;\n        // The loop sequenceItems is a stack so the biggest margins in the beginning of the sequenceItems\n        const n = _self.sequenceItems.length - cnt + 1;\n\n        _self.updateVal(item, 'starty', starty - n * conf.boxMargin, Math.min);\n        _self.updateVal(item, 'stopy', stopy + n * conf.boxMargin, Math.max);\n\n        _self.updateVal(bounds.data, 'startx', startx - n * conf.boxMargin, Math.min);\n        _self.updateVal(bounds.data, 'stopx', stopx + n * conf.boxMargin, Math.max);\n\n        if (!(type === 'activation')) {\n          _self.updateVal(item, 'startx', startx - n * conf.boxMargin, Math.min);\n          _self.updateVal(item, 'stopx', stopx + n * conf.boxMargin, Math.max);\n\n          _self.updateVal(bounds.data, 'starty', starty - n * conf.boxMargin, Math.min);\n          _self.updateVal(bounds.data, 'stopy', stopy + n * conf.boxMargin, Math.max);\n        }\n      };\n    }\n\n    this.sequenceItems.forEach(updateFn());\n    this.activations.forEach(updateFn('activation'));\n  },\n  insert: function (startx, starty, stopx, stopy) {\n    const _startx = Math.min(startx, stopx);\n    const _stopx = Math.max(startx, stopx);\n    const _starty = Math.min(starty, stopy);\n    const _stopy = Math.max(starty, stopy);\n\n    this.updateVal(bounds.data, 'startx', _startx, Math.min);\n    this.updateVal(bounds.data, 'starty', _starty, Math.min);\n    this.updateVal(bounds.data, 'stopx', _stopx, Math.max);\n    this.updateVal(bounds.data, 'stopy', _stopy, Math.max);\n\n    this.updateBounds(_startx, _starty, _stopx, _stopy);\n  },\n  newActivation: function (message, diagram, actors) {\n    const actorRect = actors[message.from.actor];\n    const stackedSize = actorActivations(message.from.actor).length || 0;\n    const x = actorRect.x + actorRect.width / 2 + ((stackedSize - 1) * conf.activationWidth) / 2;\n    this.activations.push({\n      startx: x,\n      starty: this.verticalPos + 2,\n      stopx: x + conf.activationWidth,\n      stopy: undefined,\n      actor: message.from.actor,\n      anchored: svgDraw.anchorElement(diagram),\n    });\n  },\n  endActivation: function (message) {\n    // find most recent activation for given actor\n    const lastActorActivationIdx = this.activations\n      .map(function (activation) {\n        return activation.actor;\n      })\n      .lastIndexOf(message.from.actor);\n    return this.activations.splice(lastActorActivationIdx, 1)[0];\n  },\n  createLoop: function (title = { message: undefined, wrap: false, width: undefined }, fill) {\n    return {\n      startx: undefined,\n      starty: this.verticalPos,\n      stopx: undefined,\n      stopy: undefined,\n      title: title.message,\n      wrap: title.wrap,\n      width: title.width,\n      height: 0,\n      fill: fill,\n    };\n  },\n  newLoop: function (title = { message: undefined, wrap: false, width: undefined }, fill) {\n    this.sequenceItems.push(this.createLoop(title, fill));\n  },\n  endLoop: function () {\n    return this.sequenceItems.pop();\n  },\n  addSectionToLoop: function (message) {\n    const loop = this.sequenceItems.pop();\n    loop.sections = loop.sections || [];\n    loop.sectionTitles = loop.sectionTitles || [];\n    loop.sections.push({ y: bounds.getVerticalPos(), height: 0 });\n    loop.sectionTitles.push(message);\n    this.sequenceItems.push(loop);\n  },\n  bumpVerticalPos: function (bump) {\n    this.verticalPos = this.verticalPos + bump;\n    this.data.stopy = this.verticalPos;\n  },\n  getVerticalPos: function () {\n    return this.verticalPos;\n  },\n  getBounds: function () {\n    return { bounds: this.data, models: this.models };\n  },\n};\n\n/** Options for drawing a note in {@link drawNote} */\ninterface NoteModel {\n  /** x axis start position */\n  startx: number;\n  /** y axis position */\n  starty: number;\n  /** the message to be shown */\n  message: string;\n  /** Set this with a custom width to override the default configured width. */\n  width: number;\n}\n\n/**\n * Draws an note in the diagram with the attached line\n *\n * @param elem - The diagram to draw to.\n * @param noteModel - Note model options.\n */\nconst drawNote = function (elem: any, noteModel: NoteModel) {\n  bounds.bumpVerticalPos(conf.boxMargin);\n  noteModel.height = conf.boxMargin;\n  noteModel.starty = bounds.getVerticalPos();\n  const rect = svgDraw.getNoteRect();\n  rect.x = noteModel.startx;\n  rect.y = noteModel.starty;\n  rect.width = noteModel.width || conf.width;\n  rect.class = 'note';\n\n  const g = elem.append('g');\n  const rectElem = svgDraw.drawRect(g, rect);\n  const textObj = svgDraw.getTextObj();\n  textObj.x = noteModel.startx;\n  textObj.y = noteModel.starty;\n  textObj.width = rect.width;\n  textObj.dy = '1em';\n  textObj.text = noteModel.message;\n  textObj.class = 'noteText';\n  textObj.fontFamily = conf.noteFontFamily;\n  textObj.fontSize = conf.noteFontSize;\n  textObj.fontWeight = conf.noteFontWeight;\n  textObj.anchor = conf.noteAlign;\n  textObj.textMargin = conf.noteMargin;\n  textObj.valign = 'center';\n\n  const textElem = drawText(g, textObj);\n\n  const textHeight = Math.round(\n    textElem\n      .map((te) => (te._groups || te)[0][0].getBBox().height)\n      .reduce((acc, curr) => acc + curr)\n  );\n\n  rectElem.attr('height', textHeight + 2 * conf.noteMargin);\n  noteModel.height += textHeight + 2 * conf.noteMargin;\n  bounds.bumpVerticalPos(textHeight + 2 * conf.noteMargin);\n  noteModel.stopy = noteModel.starty + textHeight + 2 * conf.noteMargin;\n  noteModel.stopx = noteModel.startx + rect.width;\n  bounds.insert(noteModel.startx, noteModel.starty, noteModel.stopx, noteModel.stopy);\n  bounds.models.addNote(noteModel);\n};\n\nconst messageFont = (cnf) => {\n  return {\n    fontFamily: cnf.messageFontFamily,\n    fontSize: cnf.messageFontSize,\n    fontWeight: cnf.messageFontWeight,\n  };\n};\nconst noteFont = (cnf) => {\n  return {\n    fontFamily: cnf.noteFontFamily,\n    fontSize: cnf.noteFontSize,\n    fontWeight: cnf.noteFontWeight,\n  };\n};\nconst actorFont = (cnf) => {\n  return {\n    fontFamily: cnf.actorFontFamily,\n    fontSize: cnf.actorFontSize,\n    fontWeight: cnf.actorFontWeight,\n  };\n};\n\n/**\n * Process a message by adding its dimensions to the bound. It returns the Y coordinate of the\n * message so it can be drawn later. We do not draw the message at this point so the arrowhead can\n * be on top of the activation box.\n *\n * @param _diagram - The parent of the message element.\n * @param msgModel - The model containing fields describing a message\n * @returns `lineStartY` - The Y coordinate at which the message line starts\n */\nfunction boundMessage(_diagram, msgModel): number {\n  bounds.bumpVerticalPos(10);\n  const { startx, stopx, message } = msgModel;\n  const lines = common.splitBreaks(message).length;\n  const textDims = utils.calculateTextDimensions(message, messageFont(conf));\n  const lineHeight = textDims.height / lines;\n  msgModel.height += lineHeight;\n\n  bounds.bumpVerticalPos(lineHeight);\n\n  let lineStartY;\n  let totalOffset = textDims.height - 10;\n  const textWidth = textDims.width;\n\n  if (startx === stopx) {\n    lineStartY = bounds.getVerticalPos() + totalOffset;\n    if (!conf.rightAngles) {\n      totalOffset += conf.boxMargin;\n      lineStartY = bounds.getVerticalPos() + totalOffset;\n    }\n    totalOffset += 30;\n    const dx = Math.max(textWidth / 2, conf.width / 2);\n    bounds.insert(\n      startx - dx,\n      bounds.getVerticalPos() - 10 + totalOffset,\n      stopx + dx,\n      bounds.getVerticalPos() + 30 + totalOffset\n    );\n  } else {\n    totalOffset += conf.boxMargin;\n    lineStartY = bounds.getVerticalPos() + totalOffset;\n    bounds.insert(startx, lineStartY - 10, stopx, lineStartY);\n  }\n  bounds.bumpVerticalPos(totalOffset);\n  msgModel.height += totalOffset;\n  msgModel.stopy = msgModel.starty + msgModel.height;\n  bounds.insert(msgModel.fromBounds, msgModel.starty, msgModel.toBounds, msgModel.stopy);\n\n  return lineStartY;\n}\n\n/**\n * Draws a message. Note that the bounds have previously been updated by boundMessage.\n *\n * @param diagram - The parent of the message element\n * @param msgModel - The model containing fields describing a message\n * @param lineStartY - The Y coordinate at which the message line starts\n * @param diagObj - The diagram object.\n */\nconst drawMessage = function (diagram, msgModel, lineStartY: number, diagObj: Diagram) {\n  const { startx, stopx, starty, message, type, sequenceIndex, sequenceVisible } = msgModel;\n  const textDims = utils.calculateTextDimensions(message, messageFont(conf));\n  const textObj = svgDraw.getTextObj();\n  textObj.x = startx;\n  textObj.y = starty + 10;\n  textObj.width = stopx - startx;\n  textObj.class = 'messageText';\n  textObj.dy = '1em';\n  textObj.text = message;\n  textObj.fontFamily = conf.messageFontFamily;\n  textObj.fontSize = conf.messageFontSize;\n  textObj.fontWeight = conf.messageFontWeight;\n  textObj.anchor = conf.messageAlign;\n  textObj.valign = 'center';\n  textObj.textMargin = conf.wrapPadding;\n  textObj.tspan = false;\n\n  drawText(diagram, textObj);\n\n  const textWidth = textDims.width;\n\n  let line;\n  if (startx === stopx) {\n    if (conf.rightAngles) {\n      line = diagram\n        .append('path')\n        .attr(\n          'd',\n          `M  ${startx},${lineStartY} H ${startx + Math.max(conf.width / 2, textWidth / 2)} V ${\n            lineStartY + 25\n          } H ${startx}`\n        );\n    } else {\n      line = diagram\n        .append('path')\n        .attr(\n          'd',\n          'M ' +\n            startx +\n            ',' +\n            lineStartY +\n            ' C ' +\n            (startx + 60) +\n            ',' +\n            (lineStartY - 10) +\n            ' ' +\n            (startx + 60) +\n            ',' +\n            (lineStartY + 30) +\n            ' ' +\n            startx +\n            ',' +\n            (lineStartY + 20)\n        );\n    }\n  } else {\n    line = diagram.append('line');\n    line.attr('x1', startx);\n    line.attr('y1', lineStartY);\n    line.attr('x2', stopx);\n    line.attr('y2', lineStartY);\n  }\n  // Make an SVG Container\n  // Draw the line\n  if (\n    type === diagObj.db.LINETYPE.DOTTED ||\n    type === diagObj.db.LINETYPE.DOTTED_CROSS ||\n    type === diagObj.db.LINETYPE.DOTTED_POINT ||\n    type === diagObj.db.LINETYPE.DOTTED_OPEN\n  ) {\n    line.style('stroke-dasharray', '3, 3');\n    line.attr('class', 'messageLine1');\n  } else {\n    line.attr('class', 'messageLine0');\n  }\n\n  let url = '';\n  if (conf.arrowMarkerAbsolute) {\n    url =\n      window.location.protocol +\n      '//' +\n      window.location.host +\n      window.location.pathname +\n      window.location.search;\n    url = url.replace(/\\(/g, '\\\\(');\n    url = url.replace(/\\)/g, '\\\\)');\n  }\n\n  line.attr('stroke-width', 2);\n  line.attr('stroke', 'none'); // handled by theme/css anyway\n  line.style('fill', 'none'); // remove any fill colour\n  if (type === diagObj.db.LINETYPE.SOLID || type === diagObj.db.LINETYPE.DOTTED) {\n    line.attr('marker-end', 'url(' + url + '#arrowhead)');\n  }\n  if (type === diagObj.db.LINETYPE.SOLID_POINT || type === diagObj.db.LINETYPE.DOTTED_POINT) {\n    line.attr('marker-end', 'url(' + url + '#filled-head)');\n  }\n\n  if (type === diagObj.db.LINETYPE.SOLID_CROSS || type === diagObj.db.LINETYPE.DOTTED_CROSS) {\n    line.attr('marker-end', 'url(' + url + '#crosshead)');\n  }\n\n  // add node number\n  if (sequenceVisible || conf.showSequenceNumbers) {\n    line.attr('marker-start', 'url(' + url + '#sequencenumber)');\n    diagram\n      .append('text')\n      .attr('x', startx)\n      .attr('y', lineStartY + 4)\n      .attr('font-family', 'sans-serif')\n      .attr('font-size', '12px')\n      .attr('text-anchor', 'middle')\n      .attr('class', 'sequenceNumber')\n      .text(sequenceIndex);\n  }\n};\n\nexport const drawActors = function (\n  diagram,\n  actors,\n  actorKeys,\n  verticalPos,\n  configuration,\n  messages,\n  isFooter\n) {\n  if (configuration.hideUnusedParticipants === true) {\n    const newActors = new Set();\n    messages.forEach((message) => {\n      newActors.add(message.from);\n      newActors.add(message.to);\n    });\n    actorKeys = actorKeys.filter((actorKey) => newActors.has(actorKey));\n  }\n\n  // Draw the actors\n  let prevWidth = 0;\n  let prevMargin = 0;\n  let maxHeight = 0;\n  let prevBox = undefined;\n\n  for (const actorKey of actorKeys) {\n    const actor = actors[actorKey];\n    const box = actor.box;\n\n    // end of box\n    if (prevBox && prevBox != box) {\n      if (!isFooter) {\n        bounds.models.addBox(prevBox);\n      }\n      prevMargin += conf.boxMargin + prevBox.margin;\n    }\n\n    // new box\n    if (box && box != prevBox) {\n      if (!isFooter) {\n        box.x = prevWidth + prevMargin;\n        box.y = verticalPos;\n      }\n      prevMargin += box.margin;\n    }\n\n    // Add some rendering data to the object\n    actor.width = actor.width || conf.width;\n    actor.height = Math.max(actor.height || conf.height, conf.height);\n    actor.margin = actor.margin || conf.actorMargin;\n\n    actor.x = prevWidth + prevMargin;\n    actor.y = bounds.getVerticalPos();\n\n    // Draw the box with the attached line\n    const height = svgDraw.drawActor(diagram, actor, conf, isFooter);\n    maxHeight = Math.max(maxHeight, height);\n    bounds.insert(actor.x, verticalPos, actor.x + actor.width, actor.height);\n\n    prevWidth += actor.width + prevMargin;\n    if (actor.box) {\n      actor.box.width = prevWidth + box.margin - actor.box.x;\n    }\n    prevMargin = actor.margin;\n    prevBox = actor.box;\n    bounds.models.addActor(actor);\n  }\n\n  // end of box\n  if (prevBox && !isFooter) {\n    bounds.models.addBox(prevBox);\n  }\n\n  // Add a margin between the actor boxes and the first arrow\n  bounds.bumpVerticalPos(maxHeight);\n};\n\nexport const drawActorsPopup = function (diagram, actors, actorKeys, doc) {\n  let maxHeight = 0;\n  let maxWidth = 0;\n  for (const actorKey of actorKeys) {\n    const actor = actors[actorKey];\n    const minMenuWidth = getRequiredPopupWidth(actor);\n    const menuDimensions = svgDraw.drawPopup(\n      diagram,\n      actor,\n      minMenuWidth,\n      conf,\n      conf.forceMenus,\n      doc\n    );\n    if (menuDimensions.height > maxHeight) {\n      maxHeight = menuDimensions.height;\n    }\n    if (menuDimensions.width + actor.x > maxWidth) {\n      maxWidth = menuDimensions.width + actor.x;\n    }\n  }\n\n  return { maxHeight: maxHeight, maxWidth: maxWidth };\n};\n\nexport const setConf = function (cnf) {\n  assignWithDepth(conf, cnf);\n\n  if (cnf.fontFamily) {\n    conf.actorFontFamily = conf.noteFontFamily = conf.messageFontFamily = cnf.fontFamily;\n  }\n  if (cnf.fontSize) {\n    conf.actorFontSize = conf.noteFontSize = conf.messageFontSize = cnf.fontSize;\n  }\n  if (cnf.fontWeight) {\n    conf.actorFontWeight = conf.noteFontWeight = conf.messageFontWeight = cnf.fontWeight;\n  }\n};\n\nconst actorActivations = function (actor) {\n  return bounds.activations.filter(function (activation) {\n    return activation.actor === actor;\n  });\n};\n\nconst activationBounds = function (actor, actors) {\n  // handle multiple stacked activations for same actor\n  const actorObj = actors[actor];\n  const activations = actorActivations(actor);\n\n  const left = activations.reduce(function (acc, activation) {\n    return Math.min(acc, activation.startx);\n  }, actorObj.x + actorObj.width / 2);\n  const right = activations.reduce(function (acc, activation) {\n    return Math.max(acc, activation.stopx);\n  }, actorObj.x + actorObj.width / 2);\n  return [left, right];\n};\n\nfunction adjustLoopHeightForWrap(loopWidths, msg, preMargin, postMargin, addLoopFn) {\n  bounds.bumpVerticalPos(preMargin);\n  let heightAdjust = postMargin;\n  if (msg.id && msg.message && loopWidths[msg.id]) {\n    const loopWidth = loopWidths[msg.id].width;\n    const textConf = messageFont(conf);\n    msg.message = utils.wrapLabel(`[${msg.message}]`, loopWidth - 2 * conf.wrapPadding, textConf);\n    msg.width = loopWidth;\n    msg.wrap = true;\n\n    // const lines = common.splitBreaks(msg.message).length;\n    const textDims = utils.calculateTextDimensions(msg.message, textConf);\n    const totalOffset = Math.max(textDims.height, conf.labelBoxHeight);\n    heightAdjust = postMargin + totalOffset;\n    log.debug(`${totalOffset} - ${msg.message}`);\n  }\n  addLoopFn(msg);\n  bounds.bumpVerticalPos(heightAdjust);\n}\n\n/**\n * Draws a sequenceDiagram in the tag with id: id based on the graph definition in text.\n *\n * @param _text - The text of the diagram\n * @param id - The id of the diagram which will be used as a DOM element id¨\n * @param _version - Mermaid version from package.json\n * @param diagObj - A standard diagram containing the db and the text and type etc of the diagram\n */\nexport const draw = function (_text: string, id: string, _version: string, diagObj: Diagram) {\n  const { securityLevel, sequence } = configApi.getConfig();\n  conf = sequence;\n  diagObj.db.clear();\n  // Parse the graph definition\n  diagObj.parser.parse(_text);\n  // Handle root and Document for when rendering in sandbox mode\n  let sandboxElement;\n  if (securityLevel === 'sandbox') {\n    sandboxElement = select('#i' + id);\n  }\n\n  const root =\n    securityLevel === 'sandbox'\n      ? select(sandboxElement.nodes()[0].contentDocument.body)\n      : select('body');\n  const doc = securityLevel === 'sandbox' ? sandboxElement.nodes()[0].contentDocument : document;\n  bounds.init();\n  log.debug(diagObj.db);\n\n  const diagram =\n    securityLevel === 'sandbox' ? root.select(`[id=\"${id}\"]`) : select(`[id=\"${id}\"]`);\n\n  // Fetch data from the parsing\n  const actors = diagObj.db.getActors();\n  const boxes = diagObj.db.getBoxes();\n  const actorKeys = diagObj.db.getActorKeys();\n  const messages = diagObj.db.getMessages();\n  const title = diagObj.db.getDiagramTitle();\n  const hasBoxes = diagObj.db.hasAtLeastOneBox();\n  const hasBoxTitles = diagObj.db.hasAtLeastOneBoxWithTitle();\n  const maxMessageWidthPerActor = getMaxMessageWidthPerActor(actors, messages, diagObj);\n  conf.height = calculateActorMargins(actors, maxMessageWidthPerActor, boxes);\n\n  svgDraw.insertComputerIcon(diagram);\n  svgDraw.insertDatabaseIcon(diagram);\n  svgDraw.insertClockIcon(diagram);\n\n  if (hasBoxes) {\n    bounds.bumpVerticalPos(conf.boxMargin);\n    if (hasBoxTitles) {\n      bounds.bumpVerticalPos(boxes[0].textMaxHeight);\n    }\n  }\n\n  drawActors(diagram, actors, actorKeys, 0, conf, messages, false);\n  const loopWidths = calculateLoopBounds(messages, actors, maxMessageWidthPerActor, diagObj);\n\n  // The arrow head definition is attached to the svg once\n  svgDraw.insertArrowHead(diagram);\n  svgDraw.insertArrowCrossHead(diagram);\n  svgDraw.insertArrowFilledHead(diagram);\n  svgDraw.insertSequenceNumber(diagram);\n\n  /**\n   * @param msg - The message to draw.\n   * @param verticalPos - The vertical position of the message.\n   */\n  function activeEnd(msg: any, verticalPos: number) {\n    const activationData = bounds.endActivation(msg);\n    if (activationData.starty + 18 > verticalPos) {\n      activationData.starty = verticalPos - 6;\n      verticalPos += 12;\n    }\n    svgDraw.drawActivation(\n      diagram,\n      activationData,\n      verticalPos,\n      conf,\n      actorActivations(msg.from.actor).length\n    );\n\n    bounds.insert(activationData.startx, verticalPos - 10, activationData.stopx, verticalPos);\n  }\n\n  // Draw the messages/signals\n  let sequenceIndex = 1;\n  let sequenceIndexStep = 1;\n  const messagesToDraw = [];\n  messages.forEach(function (msg) {\n    let loopModel, noteModel, msgModel;\n\n    switch (msg.type) {\n      case diagObj.db.LINETYPE.NOTE:\n        noteModel = msg.noteModel;\n        drawNote(diagram, noteModel);\n        break;\n      case diagObj.db.LINETYPE.ACTIVE_START:\n        bounds.newActivation(msg, diagram, actors);\n        break;\n      case diagObj.db.LINETYPE.ACTIVE_END:\n        activeEnd(msg, bounds.getVerticalPos());\n        break;\n      case diagObj.db.LINETYPE.LOOP_START:\n        adjustLoopHeightForWrap(\n          loopWidths,\n          msg,\n          conf.boxMargin,\n          conf.boxMargin + conf.boxTextMargin,\n          (message) => bounds.newLoop(message)\n        );\n        break;\n      case diagObj.db.LINETYPE.LOOP_END:\n        loopModel = bounds.endLoop();\n        svgDraw.drawLoop(diagram, loopModel, 'loop', conf);\n        bounds.bumpVerticalPos(loopModel.stopy - bounds.getVerticalPos());\n        bounds.models.addLoop(loopModel);\n        break;\n      case diagObj.db.LINETYPE.RECT_START:\n        adjustLoopHeightForWrap(loopWidths, msg, conf.boxMargin, conf.boxMargin, (message) =>\n          bounds.newLoop(undefined, message.message)\n        );\n        break;\n      case diagObj.db.LINETYPE.RECT_END:\n        loopModel = bounds.endLoop();\n        svgDraw.drawBackgroundRect(diagram, loopModel);\n        bounds.models.addLoop(loopModel);\n        bounds.bumpVerticalPos(loopModel.stopy - bounds.getVerticalPos());\n        break;\n      case diagObj.db.LINETYPE.OPT_START:\n        adjustLoopHeightForWrap(\n          loopWidths,\n          msg,\n          conf.boxMargin,\n          conf.boxMargin + conf.boxTextMargin,\n          (message) => bounds.newLoop(message)\n        );\n        break;\n      case diagObj.db.LINETYPE.OPT_END:\n        loopModel = bounds.endLoop();\n        svgDraw.drawLoop(diagram, loopModel, 'opt', conf);\n        bounds.bumpVerticalPos(loopModel.stopy - bounds.getVerticalPos());\n        bounds.models.addLoop(loopModel);\n        break;\n      case diagObj.db.LINETYPE.ALT_START:\n        adjustLoopHeightForWrap(\n          loopWidths,\n          msg,\n          conf.boxMargin,\n          conf.boxMargin + conf.boxTextMargin,\n          (message) => bounds.newLoop(message)\n        );\n        break;\n      case diagObj.db.LINETYPE.ALT_ELSE:\n        adjustLoopHeightForWrap(\n          loopWidths,\n          msg,\n          conf.boxMargin + conf.boxTextMargin,\n          conf.boxMargin,\n          (message) => bounds.addSectionToLoop(message)\n        );\n        break;\n      case diagObj.db.LINETYPE.ALT_END:\n        loopModel = bounds.endLoop();\n        svgDraw.drawLoop(diagram, loopModel, 'alt', conf);\n        bounds.bumpVerticalPos(loopModel.stopy - bounds.getVerticalPos());\n        bounds.models.addLoop(loopModel);\n        break;\n      case diagObj.db.LINETYPE.PAR_START:\n        adjustLoopHeightForWrap(\n          loopWidths,\n          msg,\n          conf.boxMargin,\n          conf.boxMargin + conf.boxTextMargin,\n          (message) => bounds.newLoop(message)\n        );\n        break;\n      case diagObj.db.LINETYPE.PAR_AND:\n        adjustLoopHeightForWrap(\n          loopWidths,\n          msg,\n          conf.boxMargin + conf.boxTextMargin,\n          conf.boxMargin,\n          (message) => bounds.addSectionToLoop(message)\n        );\n        break;\n      case diagObj.db.LINETYPE.PAR_END:\n        loopModel = bounds.endLoop();\n        svgDraw.drawLoop(diagram, loopModel, 'par', conf);\n        bounds.bumpVerticalPos(loopModel.stopy - bounds.getVerticalPos());\n        bounds.models.addLoop(loopModel);\n        break;\n      case diagObj.db.LINETYPE.AUTONUMBER:\n        sequenceIndex = msg.message.start || sequenceIndex;\n        sequenceIndexStep = msg.message.step || sequenceIndexStep;\n        if (msg.message.visible) {\n          diagObj.db.enableSequenceNumbers();\n        } else {\n          diagObj.db.disableSequenceNumbers();\n        }\n        break;\n      case diagObj.db.LINETYPE.CRITICAL_START:\n        adjustLoopHeightForWrap(\n          loopWidths,\n          msg,\n          conf.boxMargin,\n          conf.boxMargin + conf.boxTextMargin,\n          (message) => bounds.newLoop(message)\n        );\n        break;\n      case diagObj.db.LINETYPE.CRITICAL_OPTION:\n        adjustLoopHeightForWrap(\n          loopWidths,\n          msg,\n          conf.boxMargin + conf.boxTextMargin,\n          conf.boxMargin,\n          (message) => bounds.addSectionToLoop(message)\n        );\n        break;\n      case diagObj.db.LINETYPE.CRITICAL_END:\n        loopModel = bounds.endLoop();\n        svgDraw.drawLoop(diagram, loopModel, 'critical', conf);\n        bounds.bumpVerticalPos(loopModel.stopy - bounds.getVerticalPos());\n        bounds.models.addLoop(loopModel);\n        break;\n      case diagObj.db.LINETYPE.BREAK_START:\n        adjustLoopHeightForWrap(\n          loopWidths,\n          msg,\n          conf.boxMargin,\n          conf.boxMargin + conf.boxTextMargin,\n          (message) => bounds.newLoop(message)\n        );\n        break;\n      case diagObj.db.LINETYPE.BREAK_END:\n        loopModel = bounds.endLoop();\n        svgDraw.drawLoop(diagram, loopModel, 'break', conf);\n        bounds.bumpVerticalPos(loopModel.stopy - bounds.getVerticalPos());\n        bounds.models.addLoop(loopModel);\n        break;\n      default:\n        try {\n          // lastMsg = msg\n          msgModel = msg.msgModel;\n          msgModel.starty = bounds.getVerticalPos();\n          msgModel.sequenceIndex = sequenceIndex;\n          msgModel.sequenceVisible = diagObj.db.showSequenceNumbers();\n          const lineStartY = boundMessage(diagram, msgModel);\n          messagesToDraw.push({ messageModel: msgModel, lineStartY: lineStartY });\n          bounds.models.addMessage(msgModel);\n        } catch (e) {\n          log.error('error while drawing message', e);\n        }\n    }\n\n    // Increment sequence counter if msg.type is a line (and not another event like activation or note, etc)\n    if (\n      [\n        diagObj.db.LINETYPE.SOLID_OPEN,\n        diagObj.db.LINETYPE.DOTTED_OPEN,\n        diagObj.db.LINETYPE.SOLID,\n        diagObj.db.LINETYPE.DOTTED,\n        diagObj.db.LINETYPE.SOLID_CROSS,\n        diagObj.db.LINETYPE.DOTTED_CROSS,\n        diagObj.db.LINETYPE.SOLID_POINT,\n        diagObj.db.LINETYPE.DOTTED_POINT,\n      ].includes(msg.type)\n    ) {\n      sequenceIndex = sequenceIndex + sequenceIndexStep;\n    }\n  });\n\n  messagesToDraw.forEach((e) => drawMessage(diagram, e.messageModel, e.lineStartY, diagObj));\n\n  if (conf.mirrorActors) {\n    // Draw actors below diagram\n    bounds.bumpVerticalPos(conf.boxMargin * 2);\n    drawActors(diagram, actors, actorKeys, bounds.getVerticalPos(), conf, messages, true);\n    bounds.bumpVerticalPos(conf.boxMargin);\n    fixLifeLineHeights(diagram, bounds.getVerticalPos());\n  }\n\n  bounds.models.boxes.forEach(function (box) {\n    box.height = bounds.getVerticalPos() - box.y;\n    bounds.insert(box.x, box.y, box.x + box.width, box.height);\n    box.startx = box.x;\n    box.starty = box.y;\n    box.stopx = box.startx + box.width;\n    box.stopy = box.starty + box.height;\n    box.stroke = 'rgb(0,0,0, 0.5)';\n    svgDraw.drawBox(diagram, box, conf);\n  });\n\n  if (hasBoxes) {\n    bounds.bumpVerticalPos(conf.boxMargin);\n  }\n\n  // only draw popups for the top row of actors.\n  const requiredBoxSize = drawActorsPopup(diagram, actors, actorKeys, doc);\n\n  const { bounds: box } = bounds.getBounds();\n\n  // Adjust line height of actor lines now that the height of the diagram is known\n  log.debug('For line height fix Querying: #' + id + ' .actor-line');\n  const actorLines = selectAll('#' + id + ' .actor-line');\n  actorLines.attr('y2', box.stopy);\n\n  // Make sure the height of the diagram supports long menus.\n  let boxHeight = box.stopy - box.starty;\n  if (boxHeight < requiredBoxSize.maxHeight) {\n    boxHeight = requiredBoxSize.maxHeight;\n  }\n\n  let height = boxHeight + 2 * conf.diagramMarginY;\n  if (conf.mirrorActors) {\n    height = height - conf.boxMargin + conf.bottomMarginAdj;\n  }\n\n  // Make sure the width of the diagram supports wide menus.\n  let boxWidth = box.stopx - box.startx;\n  if (boxWidth < requiredBoxSize.maxWidth) {\n    boxWidth = requiredBoxSize.maxWidth;\n  }\n  const width = boxWidth + 2 * conf.diagramMarginX;\n\n  if (title) {\n    diagram\n      .append('text')\n      .text(title)\n      .attr('x', (box.stopx - box.startx) / 2 - 2 * conf.diagramMarginX)\n      .attr('y', -25);\n  }\n\n  configureSvgSize(diagram, height, width, conf.useMaxWidth);\n\n  const extraVertForTitle = title ? 40 : 0;\n  diagram.attr(\n    'viewBox',\n    box.startx -\n      conf.diagramMarginX +\n      ' -' +\n      (conf.diagramMarginY + extraVertForTitle) +\n      ' ' +\n      width +\n      ' ' +\n      (height + extraVertForTitle)\n  );\n\n  log.debug(`models:`, bounds.models);\n};\n\n/**\n * Retrieves the max message width of each actor, supports signals (messages, loops) and notes.\n *\n * It will enumerate each given message, and will determine its text width, in relation to the actor\n * it originates from, and destined to.\n *\n * @param actors - The actors map\n * @param messages - A list of message objects to iterate\n * @param diagObj - The diagram object.\n * @returns The max message width of each actor.\n */\nfunction getMaxMessageWidthPerActor(\n  actors: { [id: string]: any },\n  messages: any[],\n  diagObj: Diagram\n): { [id: string]: number } {\n  const maxMessageWidthPerActor = {};\n\n  messages.forEach(function (msg) {\n    if (actors[msg.to] && actors[msg.from]) {\n      const actor = actors[msg.to];\n\n      // If this is the first actor, and the message is left of it, no need to calculate the margin\n      if (msg.placement === diagObj.db.PLACEMENT.LEFTOF && !actor.prevActor) {\n        return;\n      }\n\n      // If this is the last actor, and the message is right of it, no need to calculate the margin\n      if (msg.placement === diagObj.db.PLACEMENT.RIGHTOF && !actor.nextActor) {\n        return;\n      }\n\n      const isNote = msg.placement !== undefined;\n      const isMessage = !isNote;\n\n      const textFont = isNote ? noteFont(conf) : messageFont(conf);\n      const wrappedMessage = msg.wrap\n        ? utils.wrapLabel(msg.message, conf.width - 2 * conf.wrapPadding, textFont)\n        : msg.message;\n      const messageDimensions = utils.calculateTextDimensions(wrappedMessage, textFont);\n      const messageWidth = messageDimensions.width + 2 * conf.wrapPadding;\n\n      /*\n       * The following scenarios should be supported:\n       *\n       * - There's a message (non-note) between fromActor and toActor\n       *   - If fromActor is on the right and toActor is on the left, we should\n       *     define the toActor's margin\n       *   - If fromActor is on the left and toActor is on the right, we should\n       *     define the fromActor's margin\n       * - There's a note, in which case fromActor == toActor\n       *   - If the note is to the left of the actor, we should define the previous actor\n       *     margin\n       *   - If the note is on the actor, we should define both the previous and next actor\n       *     margins, each being the half of the note size\n       *   - If the note is on the right of the actor, we should define the current actor\n       *     margin\n       */\n      if (isMessage && msg.from === actor.nextActor) {\n        maxMessageWidthPerActor[msg.to] = Math.max(\n          maxMessageWidthPerActor[msg.to] || 0,\n          messageWidth\n        );\n      } else if (isMessage && msg.from === actor.prevActor) {\n        maxMessageWidthPerActor[msg.from] = Math.max(\n          maxMessageWidthPerActor[msg.from] || 0,\n          messageWidth\n        );\n      } else if (isMessage && msg.from === msg.to) {\n        maxMessageWidthPerActor[msg.from] = Math.max(\n          maxMessageWidthPerActor[msg.from] || 0,\n          messageWidth / 2\n        );\n\n        maxMessageWidthPerActor[msg.to] = Math.max(\n          maxMessageWidthPerActor[msg.to] || 0,\n          messageWidth / 2\n        );\n      } else if (msg.placement === diagObj.db.PLACEMENT.RIGHTOF) {\n        maxMessageWidthPerActor[msg.from] = Math.max(\n          maxMessageWidthPerActor[msg.from] || 0,\n          messageWidth\n        );\n      } else if (msg.placement === diagObj.db.PLACEMENT.LEFTOF) {\n        maxMessageWidthPerActor[actor.prevActor] = Math.max(\n          maxMessageWidthPerActor[actor.prevActor] || 0,\n          messageWidth\n        );\n      } else if (msg.placement === diagObj.db.PLACEMENT.OVER) {\n        if (actor.prevActor) {\n          maxMessageWidthPerActor[actor.prevActor] = Math.max(\n            maxMessageWidthPerActor[actor.prevActor] || 0,\n            messageWidth / 2\n          );\n        }\n\n        if (actor.nextActor) {\n          maxMessageWidthPerActor[msg.from] = Math.max(\n            maxMessageWidthPerActor[msg.from] || 0,\n            messageWidth / 2\n          );\n        }\n      }\n    }\n  });\n\n  log.debug('maxMessageWidthPerActor:', maxMessageWidthPerActor);\n  return maxMessageWidthPerActor;\n}\n\nconst getRequiredPopupWidth = function (actor) {\n  let requiredPopupWidth = 0;\n  const textFont = actorFont(conf);\n  for (const key in actor.links) {\n    const labelDimensions = utils.calculateTextDimensions(key, textFont);\n    const labelWidth = labelDimensions.width + 2 * conf.wrapPadding + 2 * conf.boxMargin;\n    if (requiredPopupWidth < labelWidth) {\n      requiredPopupWidth = labelWidth;\n    }\n  }\n\n  return requiredPopupWidth;\n};\n\n/**\n * This will calculate the optimal margin for each given actor,\n * for a given actor → messageWidth map.\n *\n * An actor's margin is determined by the width of the actor, the width of the largest message that\n * originates from it, and the configured conf.actorMargin.\n *\n * @param actors - The actors map to calculate margins for\n * @param actorToMessageWidth - A map of actor key → max message width it holds\n * @param boxes - The boxes around the actors if any\n */\nfunction calculateActorMargins(\n  actors: { [id: string]: any },\n  actorToMessageWidth: ReturnType<typeof getMaxMessageWidthPerActor>,\n  boxes\n) {\n  let maxHeight = 0;\n  Object.keys(actors).forEach((prop) => {\n    const actor = actors[prop];\n    if (actor.wrap) {\n      actor.description = utils.wrapLabel(\n        actor.description,\n        conf.width - 2 * conf.wrapPadding,\n        actorFont(conf)\n      );\n    }\n    const actDims = utils.calculateTextDimensions(actor.description, actorFont(conf));\n    actor.width = actor.wrap\n      ? conf.width\n      : Math.max(conf.width, actDims.width + 2 * conf.wrapPadding);\n\n    actor.height = actor.wrap ? Math.max(actDims.height, conf.height) : conf.height;\n    maxHeight = Math.max(maxHeight, actor.height);\n  });\n\n  for (const actorKey in actorToMessageWidth) {\n    const actor = actors[actorKey];\n\n    if (!actor) {\n      continue;\n    }\n\n    const nextActor = actors[actor.nextActor];\n\n    // No need to space out an actor that doesn't have a next link\n    if (!nextActor) {\n      const messageWidth = actorToMessageWidth[actorKey];\n      const actorWidth = messageWidth + conf.actorMargin - actor.width / 2;\n      actor.margin = Math.max(actorWidth, conf.actorMargin);\n      continue;\n    }\n\n    const messageWidth = actorToMessageWidth[actorKey];\n    const actorWidth = messageWidth + conf.actorMargin - actor.width / 2 - nextActor.width / 2;\n\n    actor.margin = Math.max(actorWidth, conf.actorMargin);\n  }\n\n  let maxBoxHeight = 0;\n  boxes.forEach((box) => {\n    const textFont = messageFont(conf);\n    let totalWidth = box.actorKeys.reduce((total, aKey) => {\n      return (total += actors[aKey].width + (actors[aKey].margin || 0));\n    }, 0);\n\n    totalWidth -= 2 * conf.boxTextMargin;\n    if (box.wrap) {\n      box.name = utils.wrapLabel(box.name, totalWidth - 2 * conf.wrapPadding, textFont);\n    }\n\n    const boxMsgDimensions = utils.calculateTextDimensions(box.name, textFont);\n    maxBoxHeight = Math.max(boxMsgDimensions.height, maxBoxHeight);\n    const minWidth = Math.max(totalWidth, boxMsgDimensions.width + 2 * conf.wrapPadding);\n    box.margin = conf.boxTextMargin;\n    if (totalWidth < minWidth) {\n      const missing = (minWidth - totalWidth) / 2;\n      box.margin += missing;\n    }\n  });\n  boxes.forEach((box) => (box.textMaxHeight = maxBoxHeight));\n\n  return Math.max(maxHeight, conf.height);\n}\n\nconst buildNoteModel = function (msg, actors, diagObj) {\n  const startx = actors[msg.from].x;\n  const stopx = actors[msg.to].x;\n  const shouldWrap = msg.wrap && msg.message;\n\n  let textDimensions = utils.calculateTextDimensions(\n    shouldWrap ? utils.wrapLabel(msg.message, conf.width, noteFont(conf)) : msg.message,\n    noteFont(conf)\n  );\n  const noteModel = {\n    width: shouldWrap\n      ? conf.width\n      : Math.max(conf.width, textDimensions.width + 2 * conf.noteMargin),\n    height: 0,\n    startx: actors[msg.from].x,\n    stopx: 0,\n    starty: 0,\n    stopy: 0,\n    message: msg.message,\n  };\n  if (msg.placement === diagObj.db.PLACEMENT.RIGHTOF) {\n    noteModel.width = shouldWrap\n      ? Math.max(conf.width, textDimensions.width)\n      : Math.max(\n          actors[msg.from].width / 2 + actors[msg.to].width / 2,\n          textDimensions.width + 2 * conf.noteMargin\n        );\n    noteModel.startx = startx + (actors[msg.from].width + conf.actorMargin) / 2;\n  } else if (msg.placement === diagObj.db.PLACEMENT.LEFTOF) {\n    noteModel.width = shouldWrap\n      ? Math.max(conf.width, textDimensions.width + 2 * conf.noteMargin)\n      : Math.max(\n          actors[msg.from].width / 2 + actors[msg.to].width / 2,\n          textDimensions.width + 2 * conf.noteMargin\n        );\n    noteModel.startx = startx - noteModel.width + (actors[msg.from].width - conf.actorMargin) / 2;\n  } else if (msg.to === msg.from) {\n    textDimensions = utils.calculateTextDimensions(\n      shouldWrap\n        ? utils.wrapLabel(msg.message, Math.max(conf.width, actors[msg.from].width), noteFont(conf))\n        : msg.message,\n      noteFont(conf)\n    );\n    noteModel.width = shouldWrap\n      ? Math.max(conf.width, actors[msg.from].width)\n      : Math.max(actors[msg.from].width, conf.width, textDimensions.width + 2 * conf.noteMargin);\n    noteModel.startx = startx + (actors[msg.from].width - noteModel.width) / 2;\n  } else {\n    noteModel.width =\n      Math.abs(startx + actors[msg.from].width / 2 - (stopx + actors[msg.to].width / 2)) +\n      conf.actorMargin;\n    noteModel.startx =\n      startx < stopx\n        ? startx + actors[msg.from].width / 2 - conf.actorMargin / 2\n        : stopx + actors[msg.to].width / 2 - conf.actorMargin / 2;\n  }\n  if (shouldWrap) {\n    noteModel.message = utils.wrapLabel(\n      msg.message,\n      noteModel.width - 2 * conf.wrapPadding,\n      noteFont(conf)\n    );\n  }\n  log.debug(\n    `NM:[${noteModel.startx},${noteModel.stopx},${noteModel.starty},${noteModel.stopy}:${noteModel.width},${noteModel.height}=${msg.message}]`\n  );\n  return noteModel;\n};\n\nconst buildMessageModel = function (msg, actors, diagObj) {\n  let process = false;\n  if (\n    [\n      diagObj.db.LINETYPE.SOLID_OPEN,\n      diagObj.db.LINETYPE.DOTTED_OPEN,\n      diagObj.db.LINETYPE.SOLID,\n      diagObj.db.LINETYPE.DOTTED,\n      diagObj.db.LINETYPE.SOLID_CROSS,\n      diagObj.db.LINETYPE.DOTTED_CROSS,\n      diagObj.db.LINETYPE.SOLID_POINT,\n      diagObj.db.LINETYPE.DOTTED_POINT,\n    ].includes(msg.type)\n  ) {\n    process = true;\n  }\n  if (!process) {\n    return {};\n  }\n  const fromBounds = activationBounds(msg.from, actors);\n  const toBounds = activationBounds(msg.to, actors);\n  const fromIdx = fromBounds[0] <= toBounds[0] ? 1 : 0;\n  const toIdx = fromBounds[0] < toBounds[0] ? 0 : 1;\n  const allBounds = [...fromBounds, ...toBounds];\n  const boundedWidth = Math.abs(toBounds[toIdx] - fromBounds[fromIdx]);\n  if (msg.wrap && msg.message) {\n    msg.message = utils.wrapLabel(\n      msg.message,\n      Math.max(boundedWidth + 2 * conf.wrapPadding, conf.width),\n      messageFont(conf)\n    );\n  }\n  const msgDims = utils.calculateTextDimensions(msg.message, messageFont(conf));\n\n  return {\n    width: Math.max(\n      msg.wrap ? 0 : msgDims.width + 2 * conf.wrapPadding,\n      boundedWidth + 2 * conf.wrapPadding,\n      conf.width\n    ),\n    height: 0,\n    startx: fromBounds[fromIdx],\n    stopx: toBounds[toIdx],\n    starty: 0,\n    stopy: 0,\n    message: msg.message,\n    type: msg.type,\n    wrap: msg.wrap,\n    fromBounds: Math.min.apply(null, allBounds),\n    toBounds: Math.max.apply(null, allBounds),\n  };\n};\n\nconst calculateLoopBounds = function (messages, actors, _maxWidthPerActor, diagObj) {\n  const loops = {};\n  const stack = [];\n  let current, noteModel, msgModel;\n\n  messages.forEach(function (msg) {\n    msg.id = utils.random({ length: 10 });\n    switch (msg.type) {\n      case diagObj.db.LINETYPE.LOOP_START:\n      case diagObj.db.LINETYPE.ALT_START:\n      case diagObj.db.LINETYPE.OPT_START:\n      case diagObj.db.LINETYPE.PAR_START:\n      case diagObj.db.LINETYPE.CRITICAL_START:\n      case diagObj.db.LINETYPE.BREAK_START:\n        stack.push({\n          id: msg.id,\n          msg: msg.message,\n          from: Number.MAX_SAFE_INTEGER,\n          to: Number.MIN_SAFE_INTEGER,\n          width: 0,\n        });\n        break;\n      case diagObj.db.LINETYPE.ALT_ELSE:\n      case diagObj.db.LINETYPE.PAR_AND:\n      case diagObj.db.LINETYPE.CRITICAL_OPTION:\n        if (msg.message) {\n          current = stack.pop();\n          loops[current.id] = current;\n          loops[msg.id] = current;\n          stack.push(current);\n        }\n        break;\n      case diagObj.db.LINETYPE.LOOP_END:\n      case diagObj.db.LINETYPE.ALT_END:\n      case diagObj.db.LINETYPE.OPT_END:\n      case diagObj.db.LINETYPE.PAR_END:\n      case diagObj.db.LINETYPE.CRITICAL_END:\n      case diagObj.db.LINETYPE.BREAK_END:\n        current = stack.pop();\n        loops[current.id] = current;\n        break;\n      case diagObj.db.LINETYPE.ACTIVE_START:\n        {\n          const actorRect = actors[msg.from ? msg.from.actor : msg.to.actor];\n          const stackedSize = actorActivations(msg.from ? msg.from.actor : msg.to.actor).length;\n          const x =\n            actorRect.x + actorRect.width / 2 + ((stackedSize - 1) * conf.activationWidth) / 2;\n          const toAdd = {\n            startx: x,\n            stopx: x + conf.activationWidth,\n            actor: msg.from.actor,\n            enabled: true,\n          };\n          bounds.activations.push(toAdd);\n        }\n        break;\n      case diagObj.db.LINETYPE.ACTIVE_END:\n        {\n          const lastActorActivationIdx = bounds.activations\n            .map((a) => a.actor)\n            .lastIndexOf(msg.from.actor);\n          delete bounds.activations.splice(lastActorActivationIdx, 1)[0];\n        }\n        break;\n    }\n    const isNote = msg.placement !== undefined;\n    if (isNote) {\n      noteModel = buildNoteModel(msg, actors, diagObj);\n      msg.noteModel = noteModel;\n      stack.forEach((stk) => {\n        current = stk;\n        current.from = Math.min(current.from, noteModel.startx);\n        current.to = Math.max(current.to, noteModel.startx + noteModel.width);\n        current.width =\n          Math.max(current.width, Math.abs(current.from - current.to)) - conf.labelBoxWidth;\n      });\n    } else {\n      msgModel = buildMessageModel(msg, actors, diagObj);\n      msg.msgModel = msgModel;\n      if (msgModel.startx && msgModel.stopx && stack.length > 0) {\n        stack.forEach((stk) => {\n          current = stk;\n          if (msgModel.startx === msgModel.stopx) {\n            const from = actors[msg.from];\n            const to = actors[msg.to];\n            current.from = Math.min(\n              from.x - msgModel.width / 2,\n              from.x - from.width / 2,\n              current.from\n            );\n            current.to = Math.max(to.x + msgModel.width / 2, to.x + from.width / 2, current.to);\n            current.width =\n              Math.max(current.width, Math.abs(current.to - current.from)) - conf.labelBoxWidth;\n          } else {\n            current.from = Math.min(msgModel.startx, current.from);\n            current.to = Math.max(msgModel.stopx, current.to);\n            current.width = Math.max(current.width, msgModel.width) - conf.labelBoxWidth;\n          }\n        });\n      }\n    }\n  });\n  bounds.activations = [];\n  log.debug('Loop type widths:', loops);\n  return loops;\n};\n\nexport default {\n  bounds,\n  drawActors,\n  drawActorsPopup,\n  setConf,\n  draw,\n};\n","import { DiagramDefinition } from '../../diagram-api/types';\n// @ts-ignore: TODO Fix ts errors\nimport parser from './parser/sequenceDiagram';\nimport db from './sequenceDb';\nimport styles from './styles';\nimport renderer from './sequenceRenderer';\n\nexport const diagram: DiagramDefinition = {\n  parser,\n  db,\n  renderer,\n  styles,\n};\n"],"names":["parser","o","k","v","l","$V0","$V1","$V2","$V3","$V4","$V5","$V6","$V7","$V8","$V9","$Va","$Vb","$Vc","$Vd","$Ve","$Vf","$Vg","$Vh","$Vi","$Vj","$Vk","$Vl","$Vm","$Vn","$Vo","$Vp","$Vq","$Vr","$Vs","$Vt","$Vu","$Vv","$Vw","$Vx","$Vy","$Vz","$VA","$VB","$VC","$VD","$VE","yytext","yyleng","yylineno","yy","yystate","$$","_$","$0","str","hash","error","input","self","stack","tstack","vstack","lstack","table","TERROR","EOF","args","lexer","sharedState","yyloc","ranges","lex","token","symbol","state","action","r","yyval","p","len","newState","expected","errStr","ch","lines","oldLines","n","past","next","pre","c","match","indexed_rule","backup","tempMatch","index","rules","i","condition","yy_","$avoiding_name_collisions","YY_START","Parser","prevActor","actors","boxes","messages","sequenceNumbersEnabled","wrapEnabled","currentBox","parseDirective","statement","context","type","mermaidAPI","addBox","data","autoWrap","addActor","id","name","description","assignedBox","old","activationCount","part","count","LINETYPE","addMessage","idFrom","idTo","message","answer","addSignal","messageType","hasAtLeastOneBox","hasAtLeastOneBoxWithTitle","b","getMessages","getBoxes","getActors","getActor","getActorKeys","enableSequenceNumbers","disableSequenceNumbers","showSequenceNumbers","setWrap","wrapSetting","configApi.getConfig","clear","commonClear","parseMessage","_str","log","parseBoxData","color","title","style","sanitizeText","ARROWTYPE","PLACEMENT","addNote","actor","placement","addLinks","actorId","text","sanitizedText","links","insertLinks","e","addALink","sep","label","link","key","addProperties","properties","insertProperties","boxEnd","addDetails","elem","details","getActorProperty","apply","param","item","setAccTitle","db","getAccTitle","getDiagramTitle","setDiagramTitle","setAccDescription","getAccDescription","getStyles","options","styles","drawRect","rectData","rectElem","addPopupInteraction","actorCnt","addFunction","arr","popupMenuUpFunc","popupMenuDownFunc","drawPopup","minMenuWidth","textAttrs","forceMenus","displayValue","g","actorClass","menuWidth","linkY","linkElem","sanitizedLink","sanitizeUrl","_drawMenuItemTextCandidateFunc","drawImage","x","y","imageElem","drawEmbeddedImage","popupMenu","popid","popdownMenu","popupId","pu","drawText","textData","prevTextHeight","textHeight","common","_textFontSize","_textFontSizePx","parseFontSize","textElems","dy","yfunc","line","textElem","span","drawLabel","txtObject","genPoints","width","height","cut","polygon","fixLifeLineHeights","diagram","bounds","drawActorTypeParticipant","conf","isFooter","center","centerY","boxpluslineGroup","rect","getNoteRect","cssclass","iconSrc","_drawTextCandidateFunc","drawActorTypeActor","actElem","circle","drawActor","drawBox","box","drawBackgroundRect","anchorElement","drawActivation","verticalPos","actorActivations","drawLoop","loopModel","labelText","boxMargin","boxTextMargin","labelBoxHeight","labelBoxWidth","fontFamily","fontSize","fontWeight","drawLoopLine","startx","starty","stopx","stopy","txt","getTextObj","idx","sectionHeight","te","acc","curr","insertDatabaseIcon","insertComputerIcon","insertClockIcon","insertArrowHead","insertArrowFilledHead","insertSequenceNumber","insertArrowCrossHead","byText","content","_setTextAttrs","byTspan","actorFontSize","actorFontFamily","actorFontWeight","_actorFontSize","_actorFontSizePx","byFo","s","toText","fromTextAttrsDict","svgDraw","it","h","boxModel","actorModel","msgModel","noteModel","setConf","obj","val","fun","_self","cnt","updateFn","_startx","_stopx","_starty","_stopy","actorRect","stackedSize","lastActorActivationIdx","activation","fill","loop","bump","drawNote","textObj","messageFont","cnf","noteFont","actorFont","boundMessage","_diagram","textDims","utils","lineHeight","lineStartY","totalOffset","textWidth","dx","drawMessage","diagObj","sequenceIndex","sequenceVisible","url","drawActors","actorKeys","configuration","newActors","actorKey","prevWidth","prevMargin","maxHeight","prevBox","drawActorsPopup","doc","maxWidth","getRequiredPopupWidth","menuDimensions","assignWithDepth","activationBounds","actorObj","activations","left","right","adjustLoopHeightForWrap","loopWidths","msg","preMargin","postMargin","addLoopFn","heightAdjust","loopWidth","textConf","draw","_text","_version","securityLevel","sequence","sandboxElement","select","root","hasBoxes","hasBoxTitles","maxMessageWidthPerActor","getMaxMessageWidthPerActor","calculateActorMargins","calculateLoopBounds","activeEnd","activationData","sequenceIndexStep","messagesToDraw","requiredBoxSize","selectAll","boxHeight","boxWidth","configureSvgSize","extraVertForTitle","isNote","isMessage","textFont","wrappedMessage","messageWidth","requiredPopupWidth","labelWidth","actorToMessageWidth","prop","actDims","nextActor","actorWidth","maxBoxHeight","totalWidth","total","aKey","boxMsgDimensions","minWidth","missing","buildNoteModel","shouldWrap","textDimensions","buildMessageModel","process","fromBounds","toBounds","fromIdx","toIdx","allBounds","boundedWidth","msgDims","_maxWidthPerActor","loops","current","toAdd","a","stk","from","to","renderer"],"mappings":"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"}